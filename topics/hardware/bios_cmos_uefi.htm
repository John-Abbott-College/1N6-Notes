<!DOCTYPE html>
<html lang="en"><head>
<link href="../../_assets/favicons/favicon.ico" rel="icon">
<script src="../../site_libs/clipboard/clipboard.min.js"></script>
<script src="../../site_libs/quarto-html/tabby.min.js"></script>
<script src="../../site_libs/quarto-html/popper.min.js"></script>
<script src="../../site_libs/quarto-html/tippy.umd.min.js"></script>
<link href="../../site_libs/quarto-html/tippy.css" rel="stylesheet">
<link href="../../site_libs/quarto-html/light-border.css" rel="stylesheet">
<link href="../../site_libs/quarto-html/quarto-syntax-highlighting-dark-707d8167ce6003fca903bfe2be84ab7f.css" rel="stylesheet" id="quarto-text-highlighting-styles"><meta charset="utf-8">
  <meta name="generator" content="quarto-1.8.25">

  <meta name="dcterms.date" content="2025-10-20">
  <title>{{&lt; var course.title &gt;}} ‚Äì BIOS, CMOS, UEFI</title>
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, minimal-ui">
  <link rel="stylesheet" href="../../site_libs/revealjs/dist/reset.css">
  <link rel="stylesheet" href="../../site_libs/revealjs/dist/reveal.css">
  <style>
    code{white-space: pre-wrap;}
    span.smallcaps{font-variant: small-caps;}
    div.columns{display: flex; gap: min(4vw, 1.5em);}
    div.column{flex: auto; overflow-x: auto;}
    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}
    ul.task-list{list-style: none;}
    ul.task-list li input[type="checkbox"] {
      width: 0.8em;
      margin: 0 0.8em 0.2em -1em; /* quarto-specific, see https://github.com/quarto-dev/quarto-cli/issues/4556 */ 
      vertical-align: middle;
    }
  </style>
  <link rel="stylesheet" href="../../site_libs/revealjs/dist/theme/quarto-06e768f098560084c2d7120de8ad04fb.css">
  <link href="../../site_libs/revealjs/plugin/quarto-line-highlight/line-highlight.css" rel="stylesheet">
  <link href="../../site_libs/revealjs/plugin/reveal-menu/menu.css" rel="stylesheet">
  <link href="../../site_libs/revealjs/plugin/reveal-menu/quarto-menu.css" rel="stylesheet">
  <link href="../../site_libs/revealjs/plugin/quarto-support/footer.css" rel="stylesheet">
  <style type="text/css">
    .reveal div.sourceCode {
      margin: 0;
      overflow: auto;
    }
    .reveal div.hanging-indent {
      margin-left: 1em;
      text-indent: -1em;
    }
    .reveal .slide:not(.center) {
      height: 100%;
      overflow-y: auto;
    }
    .reveal .slide.scrollable {
      overflow-y: auto;
    }
    .reveal .footnotes {
      height: 100%;
      overflow-y: auto;
    }
    .reveal .slide .absolute {
      position: absolute;
      display: block;
    }
    .reveal .footnotes ol {
      counter-reset: ol;
      list-style-type: none; 
      margin-left: 0;
    }
    .reveal .footnotes ol li:before {
      counter-increment: ol;
      content: counter(ol) ". "; 
    }
    .reveal .footnotes ol li > p:first-child {
      display: inline-block;
    }
    .reveal .slide ul,
    .reveal .slide ol {
      margin-bottom: 0.5em;
    }
    .reveal .slide ul li,
    .reveal .slide ol li {
      margin-top: 0.4em;
      margin-bottom: 0.2em;
    }
    .reveal .slide ul[role="tablist"] li {
      margin-bottom: 0;
    }
    .reveal .slide ul li > *:first-child,
    .reveal .slide ol li > *:first-child {
      margin-block-start: 0;
    }
    .reveal .slide ul li > *:last-child,
    .reveal .slide ol li > *:last-child {
      margin-block-end: 0;
    }
    .reveal .slide .columns:nth-child(3) {
      margin-block-start: 0.8em;
    }
    .reveal blockquote {
      box-shadow: none;
    }
    .reveal .tippy-content>* {
      margin-top: 0.2em;
      margin-bottom: 0.7em;
    }
    .reveal .tippy-content>*:last-child {
      margin-bottom: 0.2em;
    }
    .reveal .slide > img.stretch.quarto-figure-center,
    .reveal .slide > img.r-stretch.quarto-figure-center {
      display: block;
      margin-left: auto;
      margin-right: auto; 
    }
    .reveal .slide > img.stretch.quarto-figure-left,
    .reveal .slide > img.r-stretch.quarto-figure-left  {
      display: block;
      margin-left: 0;
      margin-right: auto; 
    }
    .reveal .slide > img.stretch.quarto-figure-right,
    .reveal .slide > img.r-stretch.quarto-figure-right  {
      display: block;
      margin-left: auto;
      margin-right: 0; 
    }
  </style>
<meta property="og:title" content="BIOS, CMOS, UEFI ‚Äì Technical Support">
<meta property="og:description" content="Basic Input/Output services (computer firmware)">
<meta property="og:image" content="https://John-Abbott-College.github.io/1N6-Notes/topics/hardware/_assets/favicons/favicon-32x32.png">
<meta property="og:site_name" content="{{< var course.title >}}">
</head>
<body class="quarto-dark">
  <div class="reveal">
    <div class="slides">

<section id="title-slide" class="quarto-title-block center">
  <h1 class="title">BIOS, CMOS, UEFI</h1>
  <p class="subtitle">Basic Input/Output services (computer firmware)</p>

<div class="quarto-title-authors">
</div>

  <p class="date">2025-10-20</p>
</section><section id="TOC">
<nav role="doc-toc"> 
<h2 id="toc-title">Table of contents</h2>
<ul>
<li><a href="#/bios" id="/toc-bios">BIOS üîß</a></li>
<li><a href="#/cmos" id="/toc-cmos">CMOS üíæ</a></li>
<li><a href="#/uefi" id="/toc-uefi">UEFI üöÄ</a></li>
</ul>
</nav>
</section>
<section>
<section id="bios" class="title-slide slide level1 center">
<h1>BIOS üîß</h1>
<p>Have you ever wondered how simply pressing the power button makes a whole computer come to life? The ON/OFF button only supplies electricity to the motherboard ‚Äî but what actually triggers the operating system to load into memory is a special built-in program called the BIOS.</p>
<p>The BIOS (Basic Input/Output System) is embedded program on the motherboard that initializes the computer‚Äôs input and output devices during startup. The motherboard is often referred to as the <strong>firmware</strong> of the motherboard.</p>
<div class="callout callout-note no-icon callout-titled callout-style-default">
<div class="callout-body">
<div class="callout-title">
<p><strong>Firmware vs Software</strong></p>
</div>
<div class="callout-content">
<p>A <strong>firmware</strong> is a low level code running on ROM (Read-only-memory) chips of a hardware device to directly control it. It‚Äôs often written in low level languages like Assembly, C/C++,or Rust.</p>
<p>A <strong>software</strong>, on the other hand, refers to higher-level programs/instructions created by developers (like you!). Software relies on the firmware to interact with the hardware. It includes components such as the operating system.</p>
<div class="quarto-figure quarto-figure-center">
<figure>
<p><img data-src="_assets/bios_firmware.png"></p>
<figcaption>Firmware vs Software</figcaption>
</figure>
</div>
</div>
</div>
</div>
</section>
<section id="bios-chip" class="slide level2">
<h2>BIOS Chip</h2>
<p>The BIOS is burnt onto a read only memory chip built-into the motherboard: <img data-src="_assets/bios_chip.png" style="width:50.0%"></p>
<h3 id="read-only-memory-rom">Read Only Memory (ROM)</h3>
<p>ROM chips contain instructions that are directly accessed by the CPU, for example booting the computer and loading the operating system. Those chips retain their content even when the computer is powered off. Over time the ROM chips have evolved from purely ROM which can never be earased or over-written to EEPROM which are now electronically earasable and programmable. The information written on EEPROM can be rewritten without having to remove the actual chip from the computer.</p>
</section>
<section id="power-on-self-test" class="slide level2">
<h2>Power-on-Self Test</h2>
<p>When the motherboard receives power, the BIOS loads from its dedicated chip into memory and immediately performs a diagnostic procedure called the Power-On Self-Test (POST). The order of hardware devices checked during the BIOS is typically from the most important components (CPU, RAM, CPU fan, graphics card) to the less essential peripherals (mouse, keyboard).</p>
<p>This special test is called <strong>POST</strong> or Power-On-Self Test and will be helpful in troubleshooting any problem. The post test uses a combination of lights and sounds codes to indicate issues. Typically a black screen (BIOS) with error messages will be insicated.</p>
<div class="callout callout-note no-icon callout-titled callout-style-default">
<div class="callout-body">
<div class="callout-title">
<p><strong>Optiplex 990 POST test example</strong></p>
</div>
<div class="callout-content">
<p>On some PCs such as the Dell OptiPlex series, there exists up to 4 LED lights on the front panel which light up during the POST test and indicate error codes if an error occurs. Here is an example of an error code which happened during the POST:</p>
<p><img data-src="_assets/bios_post_optiplex990_2.png.jpg"></p>
<p>When searching through the <a href="https://f5k.fandom.com/wiki/Front_Panel_Lights_-_Optiplex_990">error codes</a> for the Optiplex 990, this is the meaning of this code:</p>
<p><img data-src="_assets/bios_post_optiplex990.png"></p>
</div>
</div>
</div>
</section>
<section id="boot-order" class="slide level2 scrollable">
<h2>Boot order</h2>
<p>After running the POST, the BIOS will search for the boot device, i.e.&nbsp;the storage device containing the operating system. For that, the BIOS will check for a special software called the ‚Äúboot loader‚Äù which loads the operating system into memory. To find this software, the BIOS will go through the boot <strong>order</strong> starting from the first device in the order (often the permanent storage devices (SSD or HDD)), then through the secondary and tertiary devices (ex: CD-ROM drives, and/or removable disks) until it finds a bootable device.</p>
<h3 id="changing-the-boot-order">Changing the boot order</h3>
<p>When installing a new operating system or using a data recovery tool, the boot order might need to be alterned.</p>
<ol type="1">
<li>Turn ON or restart the computer</li>
<li>During POST, open the BIOS setup utility <strong>by pressing the F2, F10 or F12 key</strong> (Dell and Hp) and sometimes F1.</li>
<li>Once in the BIOS setup utility, use the arrow keys to navigate through the menu.</li>
</ol>
<div class="callout callout-note no-icon callout-titled callout-style-default">
<div class="callout-body">
<div class="callout-title">
<p><strong>BIOS setup utlity</strong></p>
</div>
<div class="callout-content">
<p>The BIOS appearance might be different from one manufacturer to another. For example, you may have a horizontal bar at the top of the screen as such:</p>
<div class="quarto-figure quarto-figure-center">
<figure>
<p><img data-src="https://www.lifewire.com/thmb/knKqfOlW0V5rzR80bfeJ40wtYQ8=/750x0/filters:no_upscale():max_bytes(150000):strip_icc():format(webp)/phoenixbios-setup-main-screen-59959547c41244001039e3b1.PNG"></p>
<figcaption>Example of BIOS setup utility Source: <a href="https://www.lifewire.com/change-the-boot-order-in-bios-2624528">LifeWire</a></figcaption>
</figure>
</div>
</div>
</div>
</div>
<ol start="4" type="1">
<li>Follow the BIOS‚Äôs navigation instructions, locate the boot order option.</li>
</ol>
<div class="callout callout-note no-icon callout-titled callout-style-default">
<div class="callout-body">
<div class="callout-title">
<p><strong>Example of boot order option</strong></p>
</div>
<div class="callout-content">
<div class="quarto-figure quarto-figure-center">
<figure>
<p><img data-src="https://www.lifewire.com/thmb/iHFCQi83ogMGY1o54NindqREFNk=/750x0/filters:no_upscale():max_bytes(150000):strip_icc():format(webp)/boot-options-hard-drive-first-59959648054ad900119c6714.PNG"></p>
<figcaption>Example of boot order in the BIOS settings tool</figcaption>
</figure>
</div>
</div>
</div>
</div>
<ol start="5" type="1">
<li><p>Following the BIOS‚Äôs instructions, modify the boot order so that the boot device you wish to use is at the top.</p></li>
<li><p>Confirm the changes, this may re-start the computer.</p></li>
</ol>
<p>Once the computer restarts, it‚Äôll attempt to boot from the first device specified in the order. If it cannot boot, it‚Äôll try the next device in the list.</p>
<p>Source: <a href="https://www.lifewire.com/change-the-boot-order-in-bios-2624528">Mastering BIOS: How to Change the Boot Order By Time Fisher. July 18, 2025. LifeWire</a></p>
</section>
<section id="other-system-setup-options" class="slide level2">
<h2>Other System Setup options</h2>
<p>Altough the BIOS is stored on a Read-only Programmable memory chip, some of its settings are changeable and will be stored on the CMOS chip. Here are a few settings that are changeable:</p>
<ul>
<li><p>üïí <strong>System Date/Time</strong> Sets the system‚Äôs date and time.</p></li>
<li><p>üíæ <strong>Boot Sequence</strong> Defines the order in which the BIOS attempts to load the operating system.</p></li>
<li><p>üîå <strong>Plug and Play</strong> Allows automatic detection of connected hardware devices.</p></li>
<li><p>‚å®Ô∏è <strong>Mouse / Keyboard</strong> Enables Num Lock, auto-detect the mouse, and adjust input settings.</p></li>
<li><p>üíΩ <strong>Drive Configuration</strong> Configures storage devices such as hard drives, CD-ROMs, and floppy drives.</p></li>
<li><p>üîê <strong>Security</strong> Sets or changes passwords to restrict access to the computer.</p></li>
<li><p>‚ö° <strong>Power Management</strong> Enables or disables power-saving features and adjust standby or suspend timers.</p></li>
</ul>
</section></section>
<section id="cmos" class="title-slide slide level1 center">
<h1>CMOS üíæ</h1>
<p>After the computer is turn off, certain settings such as: <strong>the Date and time</strong>,<strong>hardware settings</strong> need to be saved. In addition to those, the custom settings of the BIOS, for example the <strong>Boot order</strong> must be saved as well, an updated hardware device. These settings, called <strong>system setup</strong>, are stored on another chip on the motherboard called CMOS (complementary metal-oxide semiconductor).</p>

<img data-src="_assets/cmos_battery.png" style="width:50.0%" class="r-stretch"><p>The CMOS is made of silicon germanium and is powered by a coin-sized CR2032 cell battery, referred to as the <strong>CMOS battery</strong>. Most CMOS batteries will last the lifetime of a motherboard (up to 10 yearsin most cases), altough it sometimes needs to be replaced.</p>
<p>Signs of a dead or dying CMOS battery are: - Incorrect or slow system date and time. - Loss of BIOS settings. - Corresponding Error code during POST.</p>
</section>

<section>
<section id="uefi" class="title-slide slide level1 center">
<h1>UEFI üöÄ</h1>
<p>For decades, the BIOS remained the hallmark of the computer booting despite the fast improvements of the computers, it did not. Intel developed the <strong>Extensible Frameworkd Interface (EFI)</strong> - an open system of standards for developing computer firmware. The UEFI is the evolution of the BIOS. It boots faster, and offers more secure boot. It was developed by Intel. Let‚Äôs have a deeper look on how the UEFI improves on the limitations of the BIOS.</p>
</section>
<section id="bios-versus-uefi" class="slide level2">
<h2>BIOS versus UEFI</h2>
<div class="columns">
<div class="column" style="width:50%;">
<p><strong>Limitations of BIOS ‚öôÔ∏è</strong> <img data-src="https://www.easeus.fr/images/en/screenshot/partition-manager/uefi-bios-boot-mode.png" alt="BIOS is legacy!"> * üè≠ <strong>Manufacturer-specific</strong>: Each motherboard manufacturer had to create its own custom BIOS, tailored to specific hardware components.</p>
<ul>
<li><p>üíæ <strong>Limited memory space</strong>: BIOS runs in 16-bit processor mode and has only 1 MB of space to operate.</p></li>
<li><p>üê¢ <strong>Slow initialization</strong>: It struggles to initialize multiple hardware devices simultaneously, resulting in slower boot times on modern computers.</p></li>
<li><p>üö´ <strong>Storage limit</strong>: Can only boot from drives up to 2.1 TB in size.</p></li>
<li><p>‚å®Ô∏è <strong>Keyboard-only support</strong>: BIOS can only recognize keyboard input (no mouse support).</p></li>
</ul>
</div><div class="column" style="width:50%;">
<p><strong>üöÄ Advantages of UEFI</strong> <img data-src="https://www.easeus.fr/images/en/screenshot/partition-manager/uefi-access.png" alt="UEFI"></p>
<ul>
<li><p>üåç <strong>Standardized and universal</strong>: Follows the EFI standard and is independant on the architecture of the computer.</p></li>
<li><p>‚ö° <strong>64-bit mode &amp; more memory</strong>: UEFI can run in 32 or 64-bit mode and is not limited in allocated memory.</p></li>
<li><p>‚öôÔ∏è <strong>Parallel hardware initialization</strong>: It can initialize multiple hardware devices simultaneously, resulting in much faster boot times.</p></li>
<li><p>üíΩ <strong>Supports Large Drives</strong>: UEFI can boot from drives larger than 2 TB, thanks to the GPT (GUID Partition Table) format.</p></li>
<li><p>üñ±Ô∏è <strong>Mouse and GUI Support</strong>: UEFI includes a user-friendly graphical user interface with both mouse and keyboard support,colors and even animation, making setup and navigation more user-friendly.</p></li>
<li><p>üõ°Ô∏è <strong>Secure Boot Protection</strong> UEFI also includes a built-in feature called <strong>Secure Boot</strong>, which prevents digitally unsigned drivers from loading. This helps protect against malicious software such as rootkits.</p></li>
</ul>
</div></div>


</section></section>
    </div>
  <div class="quarto-auto-generated-content" style="display: none;">
<div class="footer footer-default">

</div>
</div></div>

  <script>window.backupDefine = window.define; window.define = undefined;</script>
  <script src="../../site_libs/revealjs/dist/reveal.js"></script>
  <!-- reveal.js plugins -->
  <script src="../../site_libs/revealjs/plugin/quarto-line-highlight/line-highlight.js"></script>
  <script src="../../site_libs/revealjs/plugin/pdf-export/pdfexport.js"></script>
  <script src="../../site_libs/revealjs/plugin/reveal-menu/menu.js"></script>
  <script src="../../site_libs/revealjs/plugin/reveal-menu/quarto-menu.js"></script>
  <script src="../../site_libs/revealjs/plugin/quarto-support/support.js"></script>
  

  <script src="../../site_libs/revealjs/plugin/notes/notes.js"></script>
  <script src="../../site_libs/revealjs/plugin/search/search.js"></script>
  <script src="../../site_libs/revealjs/plugin/zoom/zoom.js"></script>
  <script src="../../site_libs/revealjs/plugin/math/math.js"></script>
  <script>window.define = window.backupDefine; window.backupDefine = undefined;</script>

  <script>

      // Full list of configuration options available at:
      // https://revealjs.com/config/
      Reveal.initialize({
'controlsAuto': true,
'previewLinksAuto': false,
'pdfSeparateFragments': false,
'autoAnimateEasing': "ease",
'autoAnimateDuration': 1,
'autoAnimateUnmatched': true,
'jumpToSlide': true,
'menu': {"side":"left","useTextContentForMissingTitles":true,"markers":false,"loadIcons":false,"custom":[{"title":"Tools","icon":"<i class=\"fas fa-gear\"></i>","content":"<ul class=\"slide-menu-items\">\n<li class=\"slide-tool-item active\" data-item=\"0\"><a href=\"#\" onclick=\"RevealMenuToolHandlers.fullscreen(event)\"><kbd>f</kbd> Fullscreen</a></li>\n<li class=\"slide-tool-item\" data-item=\"1\"><a href=\"#\" onclick=\"RevealMenuToolHandlers.speakerMode(event)\"><kbd>s</kbd> Speaker View</a></li>\n<li class=\"slide-tool-item\" data-item=\"2\"><a href=\"#\" onclick=\"RevealMenuToolHandlers.overview(event)\"><kbd>o</kbd> Slide Overview</a></li>\n<li class=\"slide-tool-item\" data-item=\"3\"><a href=\"#\" onclick=\"RevealMenuToolHandlers.togglePdfExport(event)\"><kbd>e</kbd> PDF Export Mode</a></li>\n<li class=\"slide-tool-item\" data-item=\"4\"><a href=\"#\" onclick=\"RevealMenuToolHandlers.toggleScrollView(event)\"><kbd>r</kbd> Scroll View Mode</a></li>\n<li class=\"slide-tool-item\" data-item=\"5\"><a href=\"#\" onclick=\"RevealMenuToolHandlers.keyboardHelp(event)\"><kbd>?</kbd> Keyboard Help</a></li>\n</ul>"}],"openButton":true},
'smaller': false,
 
        // Display controls in the bottom right corner
        controls: false,

        // Help the user learn the controls by providing hints, for example by
        // bouncing the down arrow when they first encounter a vertical slide
        controlsTutorial: false,

        // Determines where controls appear, "edges" or "bottom-right"
        controlsLayout: 'edges',

        // Visibility rule for backwards navigation arrows; "faded", "hidden"
        // or "visible"
        controlsBackArrows: 'faded',

        // Display a presentation progress bar
        progress: true,

        // Display the page number of the current slide
        slideNumber: false,

        // 'all', 'print', or 'speaker'
        showSlideNumber: 'all',

        // Add the current slide number to the URL hash so that reloading the
        // page/copying the URL will return you to the same slide
        hash: true,

        // Start with 1 for the hash rather than 0
        hashOneBasedIndex: false,

        // Flags if we should monitor the hash and change slides accordingly
        respondToHashChanges: true,

        // Push each slide change to the browser history
        history: true,

        // Enable keyboard shortcuts for navigation
        keyboard: true,

        // Enable the slide overview mode
        overview: true,

        // Disables the default reveal.js slide layout (scaling and centering)
        // so that you can use custom CSS layout
        disableLayout: false,

        // Vertical centering of slides
        center: false,

        // Enables touch navigation on devices with touch input
        touch: true,

        // Loop the presentation
        loop: false,

        // Change the presentation direction to be RTL
        rtl: false,

        // see https://revealjs.com/vertical-slides/#navigation-mode
        navigationMode: 'linear',

        // Randomizes the order of slides each time the presentation loads
        shuffle: false,

        // Turns fragments on and off globally
        fragments: true,

        // Flags whether to include the current fragment in the URL,
        // so that reloading brings you to the same fragment position
        fragmentInURL: false,

        // Flags if the presentation is running in an embedded mode,
        // i.e. contained within a limited portion of the screen
        embedded: false,

        // Flags if we should show a help overlay when the questionmark
        // key is pressed
        help: true,

        // Flags if it should be possible to pause the presentation (blackout)
        pause: true,

        // Flags if speaker notes should be visible to all viewers
        showNotes: false,

        // Global override for autoplaying embedded media (null/true/false)
        autoPlayMedia: null,

        // Global override for preloading lazy-loaded iframes (null/true/false)
        preloadIframes: null,

        // Number of milliseconds between automatically proceeding to the
        // next slide, disabled when set to 0, this value can be overwritten
        // by using a data-autoslide attribute on your slides
        autoSlide: 0,

        // Stop auto-sliding after user input
        autoSlideStoppable: true,

        // Use this method for navigation when auto-sliding
        autoSlideMethod: null,

        // Specify the average time in seconds that you think you will spend
        // presenting each slide. This is used to show a pacing timer in the
        // speaker view
        defaultTiming: null,

        // Enable slide navigation via mouse wheel
        mouseWheel: false,

        // The display mode that will be used to show slides
        display: 'block',

        // Hide cursor if inactive
        hideInactiveCursor: true,

        // Time before the cursor is hidden (in ms)
        hideCursorTime: 5000,

        // Opens links in an iframe preview overlay
        previewLinks: false,

        // Transition style (none/fade/slide/convex/concave/zoom)
        transition: 'slide',

        // Transition speed (default/fast/slow)
        transitionSpeed: 'default',

        // Transition style for full page slide backgrounds
        // (none/fade/slide/convex/concave/zoom)
        backgroundTransition: 'none',

        // Number of slides away from the current that are visible
        viewDistance: 3,

        // Number of slides away from the current that are visible on mobile
        // devices. It is advisable to set this to a lower number than
        // viewDistance in order to save resources.
        mobileViewDistance: 2,

        // The "normal" size of the presentation, aspect ratio will be preserved
        // when the presentation is scaled to fit different resolutions. Can be
        // specified using percentage units.
        width: 1050,

        height: 700,

        // Factor of the display size that should remain empty around the content
        margin: 0.2,

        math: {
          mathjax: 'https://cdn.jsdelivr.net/npm/mathjax@2.7.9/MathJax.js',
          config: 'TeX-AMS_HTML-full',
          tex2jax: {
            inlineMath: [['\\(','\\)']],
            displayMath: [['\\[','\\]']],
            balanceBraces: true,
            processEscapes: false,
            processRefs: true,
            processEnvironments: true,
            preview: 'TeX',
            skipTags: ['script','noscript','style','textarea','pre','code'],
            ignoreClass: 'tex2jax_ignore',
            processClass: 'tex2jax_process'
          },
        },

        // reveal.js plugins
        plugins: [QuartoLineHighlight, PdfExport, RevealMenu, QuartoSupport,

          RevealMath,
          RevealNotes,
          RevealSearch,
          RevealZoom
        ]
      });
    </script>
    <script id="quarto-html-after-body" type="application/javascript">
      window.document.addEventListener("DOMContentLoaded", function (event) {
        const tabsets =  window.document.querySelectorAll(".panel-tabset-tabby")
        tabsets.forEach(function(tabset) {
          const tabby = new Tabby('#' + tabset.id);
        });
        const isCodeAnnotation = (el) => {
          for (const clz of el.classList) {
            if (clz.startsWith('code-annotation-')) {                     
              return true;
            }
          }
          return false;
        }
        const onCopySuccess = function(e) {
          // button target
          const button = e.trigger;
          // don't keep focus
          button.blur();
          // flash "checked"
          button.classList.add('code-copy-button-checked');
          var currentTitle = button.getAttribute("title");
          button.setAttribute("title", "Copied!");
          let tooltip;
          if (window.bootstrap) {
            button.setAttribute("data-bs-toggle", "tooltip");
            button.setAttribute("data-bs-placement", "left");
            button.setAttribute("data-bs-title", "Copied!");
            tooltip = new bootstrap.Tooltip(button, 
              { trigger: "manual", 
                customClass: "code-copy-button-tooltip",
                offset: [0, -8]});
            tooltip.show();    
          }
          setTimeout(function() {
            if (tooltip) {
              tooltip.hide();
              button.removeAttribute("data-bs-title");
              button.removeAttribute("data-bs-toggle");
              button.removeAttribute("data-bs-placement");
            }
            button.setAttribute("title", currentTitle);
            button.classList.remove('code-copy-button-checked');
          }, 1000);
          // clear code selection
          e.clearSelection();
        }
        const getTextToCopy = function(trigger) {
          const outerScaffold = trigger.parentElement.cloneNode(true);
          const codeEl = outerScaffold.querySelector('code');
          for (const childEl of codeEl.children) {
            if (isCodeAnnotation(childEl)) {
              childEl.remove();
            }
          }
          return codeEl.innerText;
        }
        const clipboard = new window.ClipboardJS('.code-copy-button:not([data-in-quarto-modal])', {
          text: getTextToCopy
        });
        clipboard.on('success', onCopySuccess);
        if (window.document.getElementById('quarto-embedded-source-code-modal')) {
          const clipboardModal = new window.ClipboardJS('.code-copy-button[data-in-quarto-modal]', {
            text: getTextToCopy,
            container: window.document.getElementById('quarto-embedded-source-code-modal')
          });
          clipboardModal.on('success', onCopySuccess);
        }
          var localhostRegex = new RegExp(/^(?:http|https):\/\/localhost\:?[0-9]*\//);
          var mailtoRegex = new RegExp(/^mailto:/);
            var filterRegex = new RegExp("https:\/\/John-Abbott-College\.github\.io\/1N6-Notes\/");
          var isInternal = (href) => {
              return filterRegex.test(href) || localhostRegex.test(href) || mailtoRegex.test(href);
          }
          // Inspect non-navigation links and adorn them if external
         var links = window.document.querySelectorAll('a[href]:not(.nav-link):not(.navbar-brand):not(.toc-action):not(.sidebar-link):not(.sidebar-item-toggle):not(.pagination-link):not(.no-external):not([aria-hidden]):not(.dropdown-item):not(.quarto-navigation-tool):not(.about-link)');
          for (var i=0; i<links.length; i++) {
            const link = links[i];
            if (!isInternal(link.href)) {
              // undo the damage that might have been done by quarto-nav.js in the case of
              // links that we want to consider external
              if (link.dataset.originalHref !== undefined) {
                link.href = link.dataset.originalHref;
              }
            }
          }
        function tippyHover(el, contentFn, onTriggerFn, onUntriggerFn) {
          const config = {
            allowHTML: true,
            maxWidth: 500,
            delay: 100,
            arrow: false,
            appendTo: function(el) {
                return el.closest('section.slide') || el.parentElement;
            },
            interactive: true,
            interactiveBorder: 10,
            theme: 'light-border',
            placement: 'bottom-start',
          };
          if (contentFn) {
            config.content = contentFn;
          }
          if (onTriggerFn) {
            config.onTrigger = onTriggerFn;
          }
          if (onUntriggerFn) {
            config.onUntrigger = onUntriggerFn;
          }
            config['offset'] = [0,0];
            config['maxWidth'] = 700;
          window.tippy(el, config); 
        }
        const noterefs = window.document.querySelectorAll('a[role="doc-noteref"]');
        for (var i=0; i<noterefs.length; i++) {
          const ref = noterefs[i];
          tippyHover(ref, function() {
            // use id or data attribute instead here
            let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');
            try { href = new URL(href).hash; } catch {}
            const id = href.replace(/^#\/?/, "");
            const note = window.document.getElementById(id);
            if (note) {
              return note.innerHTML;
            } else {
              return "";
            }
          });
        }
        const findCites = (el) => {
          const parentEl = el.parentElement;
          if (parentEl) {
            const cites = parentEl.dataset.cites;
            if (cites) {
              return {
                el,
                cites: cites.split(' ')
              };
            } else {
              return findCites(el.parentElement)
            }
          } else {
            return undefined;
          }
        };
        var bibliorefs = window.document.querySelectorAll('a[role="doc-biblioref"]');
        for (var i=0; i<bibliorefs.length; i++) {
          const ref = bibliorefs[i];
          const citeInfo = findCites(ref);
          if (citeInfo) {
            tippyHover(citeInfo.el, function() {
              var popup = window.document.createElement('div');
              citeInfo.cites.forEach(function(cite) {
                var citeDiv = window.document.createElement('div');
                citeDiv.classList.add('hanging-indent');
                citeDiv.classList.add('csl-entry');
                var biblioDiv = window.document.getElementById('ref-' + cite);
                if (biblioDiv) {
                  citeDiv.innerHTML = biblioDiv.innerHTML;
                }
                popup.appendChild(citeDiv);
              });
              return popup.innerHTML;
            });
          }
        }
      });
      </script>
    

</body></html>