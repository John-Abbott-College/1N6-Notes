[
  {
    "objectID": "announcements/index.html",
    "href": "announcements/index.html",
    "title": "Announcements",
    "section": "",
    "text": "No matching items\n Back to topReuseCC BY-NC-SA 4.0"
  },
  {
    "objectID": "about/calendar.html",
    "href": "about/calendar.html",
    "title": "Calendar",
    "section": "",
    "text": "The focused pupil keeps watch on Time. Image retrieved from Bryan Superfreak Magnum on Pinterest.\n\n\nThis is the authoritative calendar for content covered in class, and for content you should expect to see covered as we continue through the course.\nYou can compare this calendar with the calendar from the Course Outline to see where this course has deviated from the original outline.\nComing soon…\n\n\n\n Back to topReuseCC BY-NC-SA 4.0"
  },
  {
    "objectID": "about/index.html",
    "href": "about/index.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n\n\n\n\n\n\n\n\n\n\n\nAbout this website\n\n\nDescription of technologies and resources used to build this website. Acknowledgements, copyright, terms of use, etc. can be found on this page.\n\n\n\n\n\n\n\n\n\n\nCalendar\n\n\nRoadmap for course deliverables; record of lectures & activites we have covered along the way.\n\n\n\n\n\n\n\n\n\n\nSyllabus\n\n\nCourse description outlining goals, expectations, resources, and other important information.\n\n\n\n\n\nNo matching items\n Back to topReuseCC BY-NC-SA 4.0"
  },
  {
    "objectID": "practice/binary-math.html",
    "href": "practice/binary-math.html",
    "title": "Binary math",
    "section": "",
    "text": "Question 1\nPerform the following binary additions: 1. 101 + 11 = 2. 111 + 111 = 3. 1010 + 1010 = 4. 11101 + 1010 = 5. 11111 + 11111 =\n\n\n\n\n\n\nTipSolution\n\n\n\n\n\n\n1000\n1110\n10100\n100111\n111110\n\n\n\n\n\n\nQuestion 2\nConvert the following numbers to binary and perform the operation: 1. (32)10 = 2. (50)10 + (32)10 =  3. (64)10 + (4)10 = 4. (100)10 + (220)10 =\n\n\n\n\n\n\nTipSolution\n\n\n\n\n\n\n100000\n1010010\n1000100\n101000000\n\n\n\n\n\n\nQuestion 3\nGiven the codebook below, write the binary instructions to perform this operation: (100)10 + (220)10 .  - What’s the final value on the External Data Bus?\n\n\n\n\n\n\nTipSolution\n\n\n\n\n\n\n1000 0000\n0110 1110\n1001 0000\n1101 1100\n1011 0000\n1100 0000\n\n1101110 + 11011100 = 101000000, but since the CPU’s bus size is limited to 8 bits, the most significant bit (left most, or highest power) will be lost. The final answer on the ESD is 01000000 (64).\n\n\n\n\n\nQuestion 4\nWhat is -230 in two’s complement represetation with an 12 bits bus width?\n\n\n\n\n\n\nTipSolution\n\n\n\n\n\n\nWrite 230 in binary: 1 0100 0000\nComplete the number of bits to 12 and add a bit for the sign: __0__0001 0100 0000\nFlip the bits (one’s complement): __1__1110 1011 1111\nAdd 1 to get two’s complement: __1__1110 1100 0000\n\n\n\n\n\n\nQuestion 5\nConvert the following numbers to binary and perform the operation on an 8-bit CPU: 1. (50)10 - (32)10 =  2. (64)10 - (4)10 = 3. (100)10 - (120)10 =\n\n\n\n\n\n\nTipSolution\n\n\n\n\n\n\n(50)10 - (32)10 = (50)10 + (-32)10 Binary 50: 0011 0010 Binary 32: 0010 0000 Invert 32: 1101 1111 Add 1: 1110 0000 Operation: 50-32 : 0011 0010\n\n\n1110 0000\n0001 0010\n\n\n(64)10 - (4)10 = (64)10 + (-4)10 Binary 64: 0100 0000 Binary 4: 0000 0100 Invert 4: 1111 1011 Add 1: 1111 1100 Operation 64 - 4: 0100 0000\n\n\n1111 1100\n0011 1100\n\n\nBinary 100: 0110 0100 Binary 120: 0111 1000 Invert 120: 1000 0111 Add 1: 1000 1000 Operation: 100 - 120: 0110 0100\n\n\n\n\n\n1000 1000\n\n\n\n\n1110 1100 (-20)\n\n\n\n\n\n\n\n\n\n\n\n Back to topReuseCC BY-NC-SA 4.0"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Home",
    "section": "",
    "text": "This companion site for the 420-1N6 course includes:\n\nLecture slides / documents\nExercises\nReferences & Resources\n\n\n\n\n Back to topReuseCC BY-NC-SA 4.0"
  },
  {
    "objectID": "topics/hardware/introduction-to-computers.html",
    "href": "topics/hardware/introduction-to-computers.html",
    "title": "Introduction to Computers",
    "section": "",
    "text": "Each of these things is either a computer, or a computer component. Can you identify them all? Click on the image to see everything in higher resolution.",
    "crumbs": [
      "Home",
      "Course Notes",
      "Hardware",
      "Introduction to Computers"
    ]
  },
  {
    "objectID": "topics/hardware/introduction-to-computers.html#introduction",
    "href": "topics/hardware/introduction-to-computers.html#introduction",
    "title": "Introduction to Computers",
    "section": "Introduction",
    "text": "Introduction\nWe all interact with computers on a daily basis, whether we are aware or not. In fact, it can be said that computers, or computing devices, have been part of human society (in some manner or another) for centuries – even though the computers we typically think of today are relatively recent inventions from the 20th century.\nWhat is a computer? What is it that computers actually do? This lecture is a brief introduction to these questions. The big picture definitions we learn here will be helpful anchors for better understanding the more complicated and detailed components of modern computers that we will need to learn to understand technical support as a science and a profession.",
    "crumbs": [
      "Home",
      "Course Notes",
      "Hardware",
      "Introduction to Computers"
    ]
  },
  {
    "objectID": "topics/hardware/introduction-to-computers.html#lesson-overview",
    "href": "topics/hardware/introduction-to-computers.html#lesson-overview",
    "title": "Introduction to Computers",
    "section": "Lesson overview",
    "text": "Lesson overview\n\nUnderstand what a computer is\nCompare and contrast different types of computers by complexity and capabilities\nUnderstand what modern digital computers are\nUnderstand the difference between personal computing devices and servers",
    "crumbs": [
      "Home",
      "Course Notes",
      "Hardware",
      "Introduction to Computers"
    ]
  },
  {
    "objectID": "topics/hardware/introduction-to-computers.html#what-is-a-computer",
    "href": "topics/hardware/introduction-to-computers.html#what-is-a-computer",
    "title": "Introduction to Computers",
    "section": "What is a computer?",
    "text": "What is a computer?\nA computer is an device designed to:\n\nstore information\nchange that information through human or automated interactions\n\nA computer almost always features: (1) a mechanism for keeping information intact and (2) interactive components to facilitate the modification of that information.",
    "crumbs": [
      "Home",
      "Course Notes",
      "Hardware",
      "Introduction to Computers"
    ]
  },
  {
    "objectID": "topics/hardware/introduction-to-computers.html#is-this-a-computer-examples",
    "href": "topics/hardware/introduction-to-computers.html#is-this-a-computer-examples",
    "title": "Introduction to Computers",
    "section": "Is this a computer? Examples",
    "text": "Is this a computer? Examples\nThe above definition sounds pretty general – and it is! What kinds of things count as computers, or follow the above two properties? Click through the tabs below to see some examples, and a discussion for each on its ability to compute things.\n\nDesktopsLaptopsMobile PhonesGame consolesDigital computersHardware vs SoftwarePersonal vs shared computing: What is a server?ExercisesKnowledge checkAdditional resources\n\n\nDesktop computers, often referred to as the Personal Computer (PC), are a classic example of a modern computing device – these are the computers that we will be using in our labs, and upon which we will focus the majority of our study this semester.\nDesktop computers meet the computer definition above in many ways, but simply: (1) information is stored in disks, and (2) information is modified by human interaction using devices like keyboards and mice, and then modified by the computer using a central processing unit (CPU).\n\n\n\nA desktop computer is composed of external (peripheral) components like monitors, keyboards, and mice for human interaction (input/output), as well as internal (system) components that are usually stored inside of a case or tower like in the image above, to keep sensitive electrical components safe. Image by OpenClipart-Vectors from Pixabay.\n\n\nWe will learn in future lectures the deep gritty detail of how devices like disks, keyboards, mice, CPUs, and others make modern computer magic happen.\n\n\nLaptop computers meet the computer definition above in the exact same way as desktop computers: (1) information is stored in disks (usually smaller in size and weight than desktop disks), and (2) information is modified by human interaction using devices like embedded keyboards and trackpads – though external mice and keyboards can be plugged in – and then modified by the computer using a central processing unit (CPU).\n\n\n\nA laptop computer combines similar external/internal components from desktop computers into one portable container. While the behavior of laptops and desktops is almost identical, the actual components are generally specialized for laptops and cannot be easily interchanged with desktop components. Image by Clker-Free-Vector-Images from Pixabay.\n\n\n\n\nThe first mobile phones were computers in a much more limited sense than desktops, laptops, and modern smart phones – but nonetheless they could store data like contacts, calendars, and even photos on small memory cards, as well as, of course, carry out instructions like connecting to a phone line for calling and texting.\nSmartphones are much more similar to laptops and desktops than they are to their predecessors in the type and complexity of their components, and in the amount of data and processing power that enables them to install applications, run operating systems, and much more.\n\n\n\nTwo decades of evolution of mobile phones, from a 1992 Motorola DynaTAC 8000X to the 2014 iPhone 6 Plus. The change from tactile interfaces (buttons, nontouch screens) to touchscreens for interacting with data on a phone is visible. In addition, the ability to store large amounts of data, even entire operating systems, was introduced with the first “smartphones” of Blackberry and IPhone in the mid 2000s. Image from Wikipedia, image by Jojhnjoy - own work, based on the work of Anders, Public Domain\n\n\n\n\nGame consoles such as PlayStation and Xbox, as well as handheld handheld consoles like Nintendo Switch and Valve Steam Deck, are similar to smartphones in that they technically contain all of the components of a computer, but generally manufactured from proprietary hardware that cannot be interchanged with other computers.\n\n\n\n\n\nVideo game consoles showed an interesting development in storage technology in the elate 90’s: originally, game data AND user save data would be stored on a writable ROM game cartridge as in the N64 (left). The next generation of systems like Gamecube (right) would provide read-only game data on a CD-ROM disk with writable data being stored on a separate memory card. Images by aerozol from Pixabay. :::\n\nNonelectronics?\nEven before there were consumer electronics, there were devices made to store and process data – that is, computers! The following are three different examples of nonelectronic devices that have been used for computation.\n\n\n\n\n\n\nAbacus: The world’s first calculator. Large numbers can be represented using a relatively small number of beads. Simple operations like addition and subtraction are simple to perform, but abacuses are even capable of more complex operations like multiplication, division, and square roots. Image by Pearson Scott Foresman, Public domain, via Wikimedia Commons\n\n\n\n\n\n\n\nAntikythera mechanism fragment, dated to 80 BCE. Thought to have been part of a complex system of dozens of wheels and plates, designed by engineers to measure time based on movements of the sun, moon, and other stars and planets known at the time. Retrieved from Wikimedia Commons\n\n\n\n\n\n\n\n\n\nDifference engine diagram. A theoretical computer designed in the 19th century with capabilities similar to modern computers, but using a complex system of gears and pistons to store and process data, rather than small electronic components. Image retreived from Wikimedia Commons\n\n\n\n\n\n\n\nDifference engine implemented and built in 2002 based on the original designs. Image retreived from Wikimedia Commons\n\n\n\n\n\n\n\nComputers within computers?\nIt is possible, and actually quite common, to create computers inside other computers, using the programming capabilities of that computer.\n\n\n\n\n\n\n(a) Video from Codeolences on YouTube\n\n\n\n\n\n\nFigure 1\n\n\n\nThe above are just some of many devices that are computers in this sense. Appliances like dishwashers/washing machines with cycle settings, handheld electronics like calculators (whether programmable or not), wearables like fitbits, fare gates and metro stops, traffic lights… these are just some of the many devices that work based on computing principles.\n\n\nYou may think the above definition is too general – indeed, in the context of this class, we will almost always be talking specifically about digital computers when we say computer. What is the difference?\nDigital computers have the following two additional properties compared to general computers. They are:\n\nDigital: All the “information” stored is represented by combinations of two different states (0 or 1, i.e., ON or OFF).1\nDeterministic: A given input reliably produces a defined output with every interaction.2\n\nWhen we study the components of computers, the above two properties will allow us to really understand how such devices work and why, as in every case, the device implements these two properties to give us the behavior we need.\n\n\nHardware: The physical components that make up a computer system.\nSoftware: The programs (instructions) that tell the computer (the hardware) what to do.\n\n\nIn the beginning, our focus will be on understanding individual personal computers. Yet, this barely scratches the surface of how computers are used in modern society – we will also need to learn about how many computers can be combined to pool resources and provide services at all times of day, as this is essential to the infrastructure of the internet and a foundational concept in technical support as a profession.\nFor now, we can just know that servers are similar to personal computers, but use specialized hardware that is optimized for being turned on 24/7, for communicating with other servers, and for processing and managing large amounts of data.\n\n\n\nPhoto by Matthieu Beaumont on Unsplash\n\n\nThis is because servers are the necessary infrastructure for running the large popular websites and services many of us use today on a regular basis: Social Media websites like Facebook/Instragram/etc., educational resources like Omnivox/Moodle, online software like Office 365, etc. all run on servers, or on collections of servers, known as server farms.\n\n\nNone for this lecture – stay tuned for the next two lectures!\n\n\nThe following questions invite you to reflect on the key information learned in this lesson. If you can’t answer the question, you can click the corresponding link to review the topic more closely. Future assignments and tests may be based on questions like these:\n\nWhat are the two main properites of computers?\nAre video game consoles computers?\nAre there examples of nonelectonic computers? How do nonelectronic computer compute?\nWhy is binary relevant to computers?\nWhat is the property of computers that means they reliably behave the same way given the same input?\nWhat is the name for the type of computer that is always on, and is specialized for processing large amounts of data and pooling many computing resources in one place?\n\n\n\nThis section contains helpful links to related content. You aren’t required to study these in detail, but it never hurts to learn more.\n\nComputer Basics by GCF Global: We will eventually cover almost all of the material in this free online resource; for now, Parts 1-7 in particular are relevant to what we have learned so far.\n“The Mother of All Demos” This is a 1968 presentation that introduced many of the hardware/graphics concepts we will see today and some we will see in future lectures: the mouse, networking, video conferencing, word documents, hyperlinks, gamer headphones, etc. It is very cool to see the palpable excitement of the 2000+ audience tuning into a passionate presentation of a series of completely new technologies.\nMontréal’s Musée de l’Ordinateur – unfortunately the physical location has been closed since 2022, but the website is still a neat resource for reading on the history of personal computers and their evolution. The author’s bias towards Bill Gates and Windows machines is quite strong (there is much more to the story), but the information provided is reliable and interesting.",
    "crumbs": [
      "Home",
      "Course Notes",
      "Hardware",
      "Introduction to Computers"
    ]
  },
  {
    "objectID": "topics/hardware/introduction-to-computers.html#nonelectronics",
    "href": "topics/hardware/introduction-to-computers.html#nonelectronics",
    "title": "Introduction to Computers",
    "section": "Nonelectronics?",
    "text": "Nonelectronics?\nEven before there were consumer electronics, there were devices made to store and process data – that is, computers! The following are three different examples of nonelectronic devices that have been used for computation.\n\n\n\n\n\n\nAbacus: The world’s first calculator. Large numbers can be represented using a relatively small number of beads. Simple operations like addition and subtraction are simple to perform, but abacuses are even capable of more complex operations like multiplication, division, and square roots. Image by Pearson Scott Foresman, Public domain, via Wikimedia Commons\n\n\n\n\n\n\n\nAntikythera mechanism fragment, dated to 80 BCE. Thought to have been part of a complex system of dozens of wheels and plates, designed by engineers to measure time based on movements of the sun, moon, and other stars and planets known at the time. Retrieved from Wikimedia Commons\n\n\n\n\n\n\n\n\n\nDifference engine diagram. A theoretical computer designed in the 19th century with capabilities similar to modern computers, but using a complex system of gears and pistons to store and process data, rather than small electronic components. Image retreived from Wikimedia Commons\n\n\n\n\n\n\n\nDifference engine implemented and built in 2002 based on the original designs. Image retreived from Wikimedia Commons",
    "crumbs": [
      "Home",
      "Course Notes",
      "Hardware",
      "Introduction to Computers"
    ]
  },
  {
    "objectID": "topics/hardware/introduction-to-computers.html#computers-within-computers",
    "href": "topics/hardware/introduction-to-computers.html#computers-within-computers",
    "title": "Introduction to Computers",
    "section": "Computers within computers?",
    "text": "Computers within computers?\nIt is possible, and actually quite common, to create computers inside other computers, using the programming capabilities of that computer.\n\n\n\n\n\n\n(a) Video from Codeolences on YouTube",
    "crumbs": [
      "Home",
      "Course Notes",
      "Hardware",
      "Introduction to Computers"
    ]
  },
  {
    "objectID": "topics/hardware/introduction-to-computers.html#footnotes",
    "href": "topics/hardware/introduction-to-computers.html#footnotes",
    "title": "Introduction to Computers",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nThese digital states are made possible using electrical circuitry. In order to do complex operations with these states, we can use the binary numbering to represent the digital states as a variety of numbers, letters, and other concepts. This digital information can be shared between devices using cables (whether electrical or optical, as we will see)↩︎\nFor one e.g., when you tap your OPUS card on a fare gate, you should expect that it will either let you through (if you have fare) or not (if you don’t). The concept is more general: computer engineering is, in part, the study and practise of making physical interactions with computing devices reliably and predictably produce the same deterministic results under the same physical conditions.↩︎",
    "crumbs": [
      "Home",
      "Course Notes",
      "Hardware",
      "Introduction to Computers"
    ]
  },
  {
    "objectID": "topics/hardware/introduction-to-computers.htm#introduction",
    "href": "topics/hardware/introduction-to-computers.htm#introduction",
    "title": "Introduction to Computers",
    "section": "Introduction",
    "text": "Introduction\nWe all interact with computers on a daily basis, whether we are aware or not. In fact, it can be said that computers, or computing devices, have been part of human society (in some manner or another) for centuries – even though the computers we typically think of today are relatively recent inventions from the 20th century.\nWhat is a computer? What is it that computers actually do? This lecture is a brief introduction to these questions. The big picture definitions we learn here will be helpful anchors for better understanding the more complicated and detailed components of modern computers that we will need to learn to understand technical support as a science and a profession."
  },
  {
    "objectID": "topics/hardware/introduction-to-computers.htm#lesson-overview",
    "href": "topics/hardware/introduction-to-computers.htm#lesson-overview",
    "title": "Introduction to Computers",
    "section": "Lesson overview",
    "text": "Lesson overview\n\nUnderstand what a computer is\nCompare and contrast different types of computers by complexity and capabilities\nUnderstand what modern digital computers are\nUnderstand the difference between personal computing devices and servers"
  },
  {
    "objectID": "topics/hardware/introduction-to-computers.htm#what-is-a-computer",
    "href": "topics/hardware/introduction-to-computers.htm#what-is-a-computer",
    "title": "Introduction to Computers",
    "section": "What is a computer?",
    "text": "What is a computer?\nA computer is an device designed to:\n\nstore information\nchange that information through human or automated interactions\n\nA computer almost always features: (1) a mechanism for keeping information intact and (2) interactive components to facilitate the modification of that information."
  },
  {
    "objectID": "topics/hardware/introduction-to-computers.htm#is-this-a-computer-examples",
    "href": "topics/hardware/introduction-to-computers.htm#is-this-a-computer-examples",
    "title": "Introduction to Computers",
    "section": "Is this a computer? Examples",
    "text": "Is this a computer? Examples\nThe above definition sounds pretty general – and it is! What kinds of things count as computers, or follow the above two properties? Click through the tabs below to see some examples, and a discussion for each on its ability to compute things.\n\nDesktopsLaptopsMobile PhonesGame consolesDigital computersHardware vs SoftwarePersonal vs shared computing: What is a server?ExercisesKnowledge checkAdditional resources\n\n\nDesktop computers, often referred to as the Personal Computer (PC), are a classic example of a modern computing device – these are the computers that we will be using in our labs, and upon which we will focus the majority of our study this semester.\nDesktop computers meet the computer definition above in many ways, but simply: (1) information is stored in disks, and (2) information is modified by human interaction using devices like keyboards and mice, and then modified by the computer using a central processing unit (CPU).\n\n\n\nA desktop computer is composed of external (peripheral) components like monitors, keyboards, and mice for human interaction (input/output), as well as internal (system) components that are usually stored inside of a case or tower like in the image above, to keep sensitive electrical components safe. Image by OpenClipart-Vectors from Pixabay.\n\n\nWe will learn in future lectures the deep gritty detail of how devices like disks, keyboards, mice, CPUs, and others make modern computer magic happen.\n\n\nLaptop computers meet the computer definition above in the exact same way as desktop computers: (1) information is stored in disks (usually smaller in size and weight than desktop disks), and (2) information is modified by human interaction using devices like embedded keyboards and trackpads – though external mice and keyboards can be plugged in – and then modified by the computer using a central processing unit (CPU).\n\n\n\nA laptop computer combines similar external/internal components from desktop computers into one portable container. While the behavior of laptops and desktops is almost identical, the actual components are generally specialized for laptops and cannot be easily interchanged with desktop components. Image by Clker-Free-Vector-Images from Pixabay.\n\n\n\n\nThe first mobile phones were computers in a much more limited sense than desktops, laptops, and modern smart phones – but nonetheless they could store data like contacts, calendars, and even photos on small memory cards, as well as, of course, carry out instructions like connecting to a phone line for calling and texting.\nSmartphones are much more similar to laptops and desktops than they are to their predecessors in the type and complexity of their components, and in the amount of data and processing power that enables them to install applications, run operating systems, and much more.\n\n\n\nTwo decades of evolution of mobile phones, from a 1992 Motorola DynaTAC 8000X to the 2014 iPhone 6 Plus. The change from tactile interfaces (buttons, nontouch screens) to touchscreens for interacting with data on a phone is visible. In addition, the ability to store large amounts of data, even entire operating systems, was introduced with the first “smartphones” of Blackberry and IPhone in the mid 2000s. Image from Wikipedia, image by Jojhnjoy - own work, based on the work of Anders, Public Domain\n\n\n\n\nGame consoles such as PlayStation and Xbox, as well as handheld handheld consoles like Nintendo Switch and Valve Steam Deck, are similar to smartphones in that they technically contain all of the components of a computer, but generally manufactured from proprietary hardware that cannot be interchanged with other computers.\n\n\n\n\n\nVideo game consoles showed an interesting development in storage technology in the elate 90’s: originally, game data AND user save data would be stored on a writable ROM game cartridge as in the N64 (left). The next generation of systems like Gamecube (right) would provide read-only game data on a CD-ROM disk with writable data being stored on a separate memory card. Images by aerozol from Pixabay. :::\n\nNonelectronics?\nEven before there were consumer electronics, there were devices made to store and process data – that is, computers! The following are three different examples of nonelectronic devices that have been used for computation.\n\n\n\n\n\n\nAbacus: The world’s first calculator. Large numbers can be represented using a relatively small number of beads. Simple operations like addition and subtraction are simple to perform, but abacuses are even capable of more complex operations like multiplication, division, and square roots. Image by Pearson Scott Foresman, Public domain, via Wikimedia Commons\n\n\n\n\n\n\n\nAntikythera mechanism fragment, dated to 80 BCE. Thought to have been part of a complex system of dozens of wheels and plates, designed by engineers to measure time based on movements of the sun, moon, and other stars and planets known at the time. Retrieved from Wikimedia Commons\n\n\n\n\n\n\n\n\n\nDifference engine diagram. A theoretical computer designed in the 19th century with capabilities similar to modern computers, but using a complex system of gears and pistons to store and process data, rather than small electronic components. Image retreived from Wikimedia Commons\n\n\n\n\n\n\n\nDifference engine implemented and built in 2002 based on the original designs. Image retreived from Wikimedia Commons\n\n\n\n\n\n\n\nComputers within computers?\nIt is possible, and actually quite common, to create computers inside other computers, using the programming capabilities of that computer.\n\n\n\n\n\n\n(a) Video from Codeolences on YouTube\n\n\n\n\n\n\nFigure 1\n\n\n\nThe above are just some of many devices that are computers in this sense. Appliances like dishwashers/washing machines with cycle settings, handheld electronics like calculators (whether programmable or not), wearables like fitbits, fare gates and metro stops, traffic lights… these are just some of the many devices that work based on computing principles.\n\n\nYou may think the above definition is too general – indeed, in the context of this class, we will almost always be talking specifically about digital computers when we say computer. What is the difference?\nDigital computers have the following two additional properties compared to general computers. They are:\n\nDigital: All the “information” stored is represented by combinations of two different states (0 or 1, i.e., ON or OFF).1\nDeterministic: A given input reliably produces a defined output with every interaction.2\n\nWhen we study the components of computers, the above two properties will allow us to really understand how such devices work and why, as in every case, the device implements these two properties to give us the behavior we need.\n\n\nHardware: The physical components that make up a computer system.\nSoftware: The programs (instructions) that tell the computer (the hardware) what to do.\n\n\nIn the beginning, our focus will be on understanding individual personal computers. Yet, this barely scratches the surface of how computers are used in modern society – we will also need to learn about how many computers can be combined to pool resources and provide services at all times of day, as this is essential to the infrastructure of the internet and a foundational concept in technical support as a profession.\nFor now, we can just know that servers are similar to personal computers, but use specialized hardware that is optimized for being turned on 24/7, for communicating with other servers, and for processing and managing large amounts of data.\n\n\n\nPhoto by Matthieu Beaumont on Unsplash\n\n\nThis is because servers are the necessary infrastructure for running the large popular websites and services many of us use today on a regular basis: Social Media websites like Facebook/Instragram/etc., educational resources like Omnivox/Moodle, online software like Office 365, etc. all run on servers, or on collections of servers, known as server farms.\n\n\nNone for this lecture – stay tuned for the next two lectures!\n\n\nThe following questions invite you to reflect on the key information learned in this lesson. If you can’t answer the question, you can click the corresponding link to review the topic more closely. Future assignments and tests may be based on questions like these:\n\nWhat are the two main properites of computers?\nAre video game consoles computers?\nAre there examples of nonelectonic computers? How do nonelectronic computer compute?\nWhy is binary relevant to computers?\nWhat is the property of computers that means they reliably behave the same way given the same input?\nWhat is the name for the type of computer that is always on, and is specialized for processing large amounts of data and pooling many computing resources in one place?\n\n\n\nThis section contains helpful links to related content. You aren’t required to study these in detail, but it never hurts to learn more.\n\nComputer Basics by GCF Global: We will eventually cover almost all of the material in this free online resource; for now, Parts 1-7 in particular are relevant to what we have learned so far.\n“The Mother of All Demos” This is a 1968 presentation that introduced many of the hardware/graphics concepts we will see today and some we will see in future lectures: the mouse, networking, video conferencing, word documents, hyperlinks, gamer headphones, etc. It is very cool to see the palpable excitement of the 2000+ audience tuning into a passionate presentation of a series of completely new technologies.\nMontréal’s Musée de l’Ordinateur – unfortunately the physical location has been closed since 2022, but the website is still a neat resource for reading on the history of personal computers and their evolution. The author’s bias towards Bill Gates and Windows machines is quite strong (there is much more to the story), but the information provided is reliable and interesting.\n\n\n\n\n\n\nThese digital states are made possible using electrical circuitry. In order to do complex operations with these states, we can use the binary numbering to represent the digital states as a variety of numbers, letters, and other concepts. This digital information can be shared between devices using cables (whether electrical or optical, as we will see)For one e.g., when you tap your OPUS card on a fare gate, you should expect that it will either let you through (if you have fare) or not (if you don’t). The concept is more general: computer engineering is, in part, the study and practise of making physical interactions with computing devices reliably and predictably produce the same deterministic results under the same physical conditions."
  },
  {
    "objectID": "topics/hardware/introduction-to-computers.htm#nonelectronics",
    "href": "topics/hardware/introduction-to-computers.htm#nonelectronics",
    "title": "Introduction to Computers",
    "section": "Nonelectronics?",
    "text": "Nonelectronics?\nEven before there were consumer electronics, there were devices made to store and process data – that is, computers! The following are three different examples of nonelectronic devices that have been used for computation.\n\n\n\n\n\n\nAbacus: The world’s first calculator. Large numbers can be represented using a relatively small number of beads. Simple operations like addition and subtraction are simple to perform, but abacuses are even capable of more complex operations like multiplication, division, and square roots. Image by Pearson Scott Foresman, Public domain, via Wikimedia Commons\n\n\n\n\n\n\n\nAntikythera mechanism fragment, dated to 80 BCE. Thought to have been part of a complex system of dozens of wheels and plates, designed by engineers to measure time based on movements of the sun, moon, and other stars and planets known at the time. Retrieved from Wikimedia Commons\n\n\n\n\n\n\n\n\n\nDifference engine diagram. A theoretical computer designed in the 19th century with capabilities similar to modern computers, but using a complex system of gears and pistons to store and process data, rather than small electronic components. Image retreived from Wikimedia Commons\n\n\n\n\n\n\n\nDifference engine implemented and built in 2002 based on the original designs. Image retreived from Wikimedia Commons"
  },
  {
    "objectID": "topics/hardware/introduction-to-computers.htm#computers-within-computers",
    "href": "topics/hardware/introduction-to-computers.htm#computers-within-computers",
    "title": "Introduction to Computers",
    "section": "Computers within computers?",
    "text": "Computers within computers?\nIt is possible, and actually quite common, to create computers inside other computers, using the programming capabilities of that computer.\n\n\n\n\n\n\n(a) Video from Codeolences on YouTube"
  },
  {
    "objectID": "topics/hardware/internal-components.html",
    "href": "topics/hardware/internal-components.html",
    "title": "Internal Components",
    "section": "",
    "text": "The major internal components of desktop computers. Image source: TBA",
    "crumbs": [
      "Home",
      "Course Notes",
      "Hardware",
      "Internal Components"
    ]
  },
  {
    "objectID": "topics/hardware/internal-components.html#introduction",
    "href": "topics/hardware/internal-components.html#introduction",
    "title": "Internal Components",
    "section": "Introduction",
    "text": "Introduction\nIn previous weeks we learned the basic behaviors that define computers – their ability to store, retrieve, and process information. This means that many simple devices, even non-electronics, can be considered computers.\nThe computers that we mostly are concerned with in the computer science profession, however, are generally complicated electronic devices made of many components. In this class, we are going to learn many of the fundamental components that make up modern computing devices.\nWe will continue with the internal, or system, components of a computer – each of these have their own set of interesting behaviors and properties that are worth understanding.",
    "crumbs": [
      "Home",
      "Course Notes",
      "Hardware",
      "Internal Components"
    ]
  },
  {
    "objectID": "topics/hardware/internal-components.html#lesson-overview",
    "href": "topics/hardware/internal-components.html#lesson-overview",
    "title": "Internal Components",
    "section": "Lesson overview",
    "text": "Lesson overview\nThe system components of a computer are responsible for the following behaviors:\n\nMain needs:\n\nstore information\nprocess information\nretrieve information\n\nAuxiliary needs:\n\nprotection from elements/interference\nsource of electrical power\ntemperature management for heat generated\nstructure\ncommunication between components\ntiers of storage/processing specialized for different purposes\n\n\nMany components will fulfil these needs. Here is a list of the components inside the system unit which we will learn about:\n\nCase\nPower Supply\nMotherboard\nInternal Connectors\nProcessor (CPU)\nCooling Devices\nMemory (RAM)\nGraphics processor (GPU)\nStorage Devices (CD, HDD, SSD, NVME/M2)",
    "crumbs": [
      "Home",
      "Course Notes",
      "Hardware",
      "Internal Components"
    ]
  },
  {
    "objectID": "topics/hardware/internal-components.html#definitions",
    "href": "topics/hardware/internal-components.html#definitions",
    "title": "Internal Components",
    "section": "Definitions",
    "text": "Definitions\nWhen discussing components of any complicated machine, we should try to understand the following about those components:\n\nMake/Model\n\nThe make and model refer to the brand and specific product name of a component.\n\n\n\n\n\n\n\nNoteExample\n\n\n\nHyundai Accent — where Hyundai is the make (manufacturer), and Accent is the model (product).\n\n\nWhy it matters:\n\nWho manufactures the component?\nAre there multiple versions of this model produced by the same brand?\nWhat distinguishes one version from another?\n\n\n\nProperties\n\nProperties describe the quantitative (numerical) and qualitative (descriptive) characteristics of a component that can be compared with similar components.\n\n\n\n\n\n\n\nNoteExample\n\n\n\n\nQuantitative example The 2009 Hyundai Accent has a fuel efficiency of 29 MPG (miles per gallon).\nQualitative example The Hyundai Accent is a hatchback, not a sedan.\n\n\n\nWhy it matters:\n\nWhat performance can be expected from this component?\nIs there a cost-benefit advantage to choosing a component with more suitable properties?\nHow do these traits affect compatibility, efficiency, or user experience?\n\nThese two concepts—make/model and properties—will vary widely depending on the component. Understanding both is essential for every component we’ll discuss today.",
    "crumbs": [
      "Home",
      "Course Notes",
      "Hardware",
      "Internal Components"
    ]
  },
  {
    "objectID": "topics/hardware/internal-components.html#case",
    "href": "topics/hardware/internal-components.html#case",
    "title": "Internal Components",
    "section": "1. Case 🧊",
    "text": "1. Case 🧊\n\n\n\nComputer case helping air circulation inside the system unit. Source: Voltcave\n\n\n\nProvides protection and cooling for the internal components.\nAlso prevents damage from static electricity\n\n\n\n\n\n\n\nNoteQuestion ❔\n\n\n\n\nWhat is static electricity?\nHow is the case projecting from that?\n\n\n\n\nUsually made of plastic, steel or aluminum.\nHelps the fans move air through all components:\n\nto replace warm air with cold air to keep components at stable temperatures\nto prevent build-up of dust\nThere exist many guides/studies for optimal airflow. E.g. Voltcave Guide",
    "crumbs": [
      "Home",
      "Course Notes",
      "Hardware",
      "Internal Components"
    ]
  },
  {
    "objectID": "topics/hardware/internal-components.html#power-supply-psu",
    "href": "topics/hardware/internal-components.html#power-supply-psu",
    "title": "Internal Components",
    "section": "2. Power Supply (PSU) ⚡",
    "text": "2. Power Supply (PSU) ⚡\nMain purpose: Converts AC power (alternating current) from wall socket to DC power (direct current). Direct current (0 or 5V) is used to power digital circuits.\n\nComputers can only tolerate slight fluctuations in power without needing to shut down!. This is why we need to convert the electric current from the providers to direct current.\nPSUs have their own fans because energy conversion releases a lot of heat!\n\n\n\n\n\n\n\nWarningNever open a power supply!\n\n\n\nThe capacitors contained within can keep a dangerous high voltage, high power charge long after being unplugged.\n\n\n\n\n\n\n\n\nPower Supply rated “Gold”\n\n\n\n\n\n\n\nRegular Power Supply.\n\n\n\n\n\n\n\n\n\n\n\n\nDifference between AC vs DC current.\n\n\n\n2.1 PSU Connectors 🔌🔋\n\nMost power supply connectors are : 20 + 4 pins\nUsually made up of wires of various colors:\n\nYellow 12V\nRed 5V\nOrange 3.3V\nOther colors may be ground 0V\n\n\n\n\n\n\n\n\n\nUsual PSU connectors\n\n\n\n\n2.2 PSU Ratings 🏅\nNot all PSUs efficiently convert AC to DC power!\nTo pick the right power supply for your machine, you must firstly know what’s the wattage required by your system. For this you might need to add all the internal components into the Wattage calculator which will then provide an estimate of the load wattage of this machine.\n\n\n\n\n\n\nNoteExample\n\n\n\nIf you’re building a PC with an Intel Core i7-11700K CPU, an Nvidia GeForce RTX 3070 GPU, 16 gigabytes (GB) of RAM made up of two 8GB sticks, a 1TB solid-state drive (SSD), and a 1TB 7200RPM hard disk drive (HDD), then 512 watts of power would be recommended.\n\n\n\n80 Plus Standard\nThe 80 Plus standard was created to promote efficient enery use of a computer. When selecting a power supply, you might see that many suppliers will carry the 80 Plus certification labels. The efficiency of a power supply gives the ratio of AC power required from an electrical outlet to the useful power converted to DC to be used by a computer (the load wattage).\n\n\n\n\n\n\nNoteExample\n\n\n\nA 75% efficient power supply requires 100W of AC input to provide 75 W of DC load wattage output to a computer. dissipating the remaining 25 W in as heat.\n\n\nIn the North America, the outlet voltage is roughly 115 V. The following table summerizes the efficiency levels for that voltage.\n\n\n\n% of Rated Load\n10%\n20%\n50%\n100%\n\n\n\n\n80 PLUS\n-\n80%\n80%\n80%\n\n\n80 PLUS Bronze\n-\n82%\n85%\n82%\n\n\n80 PLUS Silver\n-\n85%\n88%\n85%\n\n\n80 PLUS Gold\n-\n87%\n90%\n87%\n\n\n80 PLUS Platinum\n-\n90%\n92%\n89%\n\n\n80 PLUS Titanium\n90%\n92%\n94%\n90%\n\n\n\nAfter figuring out the required wattage for your machine, you can then calculate the input wattage required by the PSU to reach the desired load wattage of your machine.\n\nFor more detailed explanation: How to Choose a Power Supply\n\n\n\n\n2.3 Uninterruptible Power Supply\nIn the case of a power outage, an Uninterruptible Power Supply (UPS) can keep a computer running for a few minutes to several hours depending on the sophistication of the UPS. See Uninterruptible Power Supply for an example.\nIt’s basically a large battery that keeps charge during normal operation, and powers a computer using its stored charge when the building’s power is cut off.",
    "crumbs": [
      "Home",
      "Course Notes",
      "Hardware",
      "Internal Components"
    ]
  },
  {
    "objectID": "topics/hardware/internal-components.html#motherboard",
    "href": "topics/hardware/internal-components.html#motherboard",
    "title": "Internal Components",
    "section": "3. Motherboard 📟",
    "text": "3. Motherboard 📟\nMotherboards connect all the major components of the computer: the CPU, RAM, Expansion ports, etc.\n\n\n\nAn ASUS Pro B660M Motherboard. Most motherboards look something like this.\n\n\n\nComposed of various chips all combined into north  and south bridges\nMain circuit board and controls the electrical pathways (buses) found in a computer.\nThe buses allow data to travel between the various components of a computer.\nVarious form factors, e.g. AT, ATX, LPX, BTX, ITX.\n\n\n\n\nMotherboard form factors, from largest to smallest.\n\n\n\n3.1 Form Factors\n\nAT\n\nInvented by IBM in early 1980s, now obsolete.\nHuge in size (approximately 12 x 13 inches).\nNeeded lots of space for power supply and its various chips.\nLacked external ports, only allowed for monitor and keyboard.\n\nATX\n\nCreated in 1995 to meet the need for more connectors.\nGot off to a slow start but by 1998 became the most common form factor.\nBiggest change to AT was the rear panel with standard set of ports for expansion.\nPower supply position for better airflow, CPU and RAM positioned for easier access.\nVariations 12x9in (full size), 9.6x9.6in ( microATX )\n\nATX and microATX are the most common in personal desktop computers today\n\n\n\nITX\n\nCreated in 2001 to meet the demand for smaller computers.\nITX failed but led to development of smaller form factor (SSF) motherboards.\nMiniITX (6.7x6.7in), NanoITX (4.7x4.7in) and PicoITX (3.8x2.8in)\nCommonly used for embedded systems and specialized devices such as routers.\nRequire very little power, therefore produce less heat.\n\nProprietary\n\nSome computer manufacturers make motherboards that work only with their cases. (Ahemm…🍏)\nServices and upgrades usually need to be handled by authorized dealers.\nOften hard to get replacement parts and they are usually expensive.\n\n\n\n\n3.2 I/O Ports\nYou’ll notice that the I/O Ports (input/output) on the mother board are always located around the same area. This is to keep certain consistency across manufacturer and regardless of the form factors.\n\n\n\n\n\n\n\nI/O Ports location standard accross manufacturer and form factors.\n\n\n\n\n3.3 Expansion Slots\nLet’s have a closer look at what we call expansion slots.\nExpansion slots are ports inside a computer found on the motherboard. They provide the possibility to expand the hardware of your PC.\nFor example, you may want to install a network card, a sound card, and most commonly, a video card.\n\n\n\nExpansion slot\n\n\n\nExpansion slots allow us to increase the functionality of a computer by adding controllers for specific devices (often called adapter cards) e.g. sound, video, NIC (network Interface Card).\n\nPCI used in most computers, commonly used for network interface\nAGP designed to be used by video adapters\nPCIe replaces AGP in newer computers, used for video cards\nISA older, rarely used, 8 or 16 bit\nEISA older, rarely used, 32 bit\nMCA IBM proprietary 32 bit, older, rarely used\nPCI-X 32 bit, can run up to four times faster than PCI\nMiniPCI 32 bit, used by laptops, has three different form factors\n\nIn 2024 : PCI  and PCIe  are the common standards that cover all features required for expansion slots\n\n\n\n\n\n\n\nNetwork Interfact Card\n\n\n\n\n\n\n\nNVidea Video Card\n\n\n\n\n\n\n\n\n\nMultiple expansion slots\n\n\n\n\n\n\n\nTypes of expansion slots. Source: PC Mag\n\n\n\n\n\n\n\n3.4 CPU Socket\nLet’s have a closer look at the CPU Socket, which rests in the motherboard. This is where the CPU will sit.\n\n\n\n\n\n\nThe motherboard…\n\n\n\n\n\n\n\n… and the CPU socket.\n\n\n\n\n\n\nHow to Connect a CPU?\nCPU connection on the motherboard is known as the CPU socket.\nThe CPU is connected to the motherboard in one of two ways:\n\nPin Grid Array – PGA\n\nPins are on the CPU (underside of the processor).\nSocket on motherboard includes holes that line up with the CPU pins.\n\nLand Grid Array – LGA\n\nPins are on the motherboard (on socket) instead of on the processor.\n\n\n\n\n\n\n\n\nLand Grid Array – LGA\n\n\n\n\n\n\n\nPin Grid Array – PGA",
    "crumbs": [
      "Home",
      "Course Notes",
      "Hardware",
      "Internal Components"
    ]
  },
  {
    "objectID": "topics/hardware/internal-components.html#internal-connectors",
    "href": "topics/hardware/internal-components.html#internal-connectors",
    "title": "Internal Components",
    "section": "4. Internal Connectors 🔌",
    "text": "4. Internal Connectors 🔌\nThere are a variety of connectors used to connect components to the motherboard. Two main purposes:\n\nSignals : for communication/data transfer\nPower : not all components connect directly to the power supply, they get power from the motherboard\n\nMost connectors are keyed (can only be inserted one way).\n\n\n\n\n\n\nNote\n\n\n\nAlways check the pins if you have trouble with a connector.\n\n\n\n\n\n\n\n\nWarningQuote\n\n\n\n“If it doesn’t go in like butter, it doesn’t go in at all” – never force a connection! you are likely going to damage the pins.\n\n\n\nExample connectors\n\n\n\n\n\n\nSATA Power Cables\n\n\n\n\n\n\n\nSATA 3 Cables for hard drives with angle connectors\n\n\n\n\n\n\n\n\n\nPCIe (for Video cards).",
    "crumbs": [
      "Home",
      "Course Notes",
      "Hardware",
      "Internal Components"
    ]
  },
  {
    "objectID": "topics/hardware/internal-components.html#cpu",
    "href": "topics/hardware/internal-components.html#cpu",
    "title": "Internal Components",
    "section": "5. CPU 🧠",
    "text": "5. CPU 🧠\nThe CPU Most important element of the computer.\n\nResponsible for interpreting  and executing  the commands from the software.\ncommunicates instructions for all of the other components of the computer\nWhile the CPU is processing one step of the program, the remaining instructions and the data are stored in a special memory called cache.\n\n\n\n\nA CPU sitting in the CPU socket on the motherboard.\n\n\nWe’ll have a lecture dedicated to the CPU since it is so complicated.\n\nCPU Brands\nIntel: Historically the main CPU manufacturer\nAMD: Relatively recent competitor to Intel\n\n\n\nCPU naming conventions and associated properties.",
    "crumbs": [
      "Home",
      "Course Notes",
      "Hardware",
      "Internal Components"
    ]
  },
  {
    "objectID": "topics/hardware/internal-components.html#cooling-devices",
    "href": "topics/hardware/internal-components.html#cooling-devices",
    "title": "Internal Components",
    "section": "6. Cooling Devices 🪭",
    "text": "6. Cooling Devices 🪭\nThe flow of current between and within electronic components generates heat. Some devices are particularly powerful heat-generators, due to the large current they draw: ::: {.callout-note}\n\nCPUs typically come with their own cooling device\nCooling devices are built into GPUs and Power Supplies :::\n\nThere are two main types of cooling devices:\n\nFans inside the case increase airflow and removes heat.\nHeat sinks also draw heat away from the CPU core.\n\n\nFans\nThe flow of current between the electronic components generates heat.\nFans inside the case increase airflow and removes heat.\nOccasionally video cards or other components have their own fans to cool them.\n\n\n\n3D model of a computer Fan.\n\n\n\n\nHeat sinks\n\nHeat sinks also draw heat away from the CPU core.\n\nA heat sink is a piece of copper or aluminum that resides between the processor and the CPU fan.\nIt absorbs the heat from the processor and the fan disperses the heat.\n\n\n\n\n\nVariety of heat sinks.",
    "crumbs": [
      "Home",
      "Course Notes",
      "Hardware",
      "Internal Components"
    ]
  },
  {
    "objectID": "topics/hardware/internal-components.html#main-memory-ram",
    "href": "topics/hardware/internal-components.html#main-memory-ram",
    "title": "Internal Components",
    "section": "7. Main Memory (RAM) 📋",
    "text": "7. Main Memory (RAM) 📋\nReferred to as RAM (Random Access Memory). They’re connected to RAM slots on the motherboard:\n\n\n\n\n\n\n\nRAM slots.\n\n\nRAM is a collection of integrated circuits (chips). Temporary storage for data and programs that are being accessed by the CPU.\nVolatile memory : contents are erased when the computer is switched off. (or when power is lost)\n\n\n\n\n\n\n\nRAM sticks.\n\n\n\n7.1 Properties\nThere are four main properties of RAM to know:\n\nCapacity:  Total memory (in GB, GigaBytes)\n\nMore RAM means more capacity to hold and process large programs and files.\nMaximum installed is limited by the motherboard and the operating system.\n\nSpeed:  How many operations per second\n\nMany, millions or billions per second\n1MHz = 1 million / second, 1 GHz = 1 billion / second\n\nLatency : How much time delay between communications\nGeneration: See next slides\n\n\n\n7.2 RAM Form Factors\n\nSIMMs (Single In-Line Memory Modules)\n\nHave a single line of connectors.\nNow obsolete.\n\nDIMMs (Dual In-Line Memory Modules)\n\nHave two lines of connectors.\nHave Wider bus (supports 64 bits) 🡪 How can this help? More on this in the coming weeks.\nBecame dominant (no need to state that a memory module is a DIMM).\n\n\n\n\n7.3 RAM Generations\n\n\n\n\n\n\n\nType of RAM\nDescription\n\n\n\n\nSynchronous DRAM (SDRAM)\nDRAM that operates in time with the memory bus.Tied to the system clock like the CPU and the memory controller.Results in very little wasted time.\n\n\nDouble Data Rate SDRAM (DDR)\nDDR transfers data twice as fast as SDRAM.Larger buffer gives it a huge boost.\n\n\nDouble Data Rate 2 SDRAM (DDR2)\nDDR2 decreases noise making it faster than DDR.\n\n\nDouble Data Rate 3 SDRAM (DDR3)\nDDR3 doubles the clock rate of DDR2, consumes less power and generates less heat.\n\n\nDouble Data Rate 4 SDRAM (DDR4)\nDDR4 arrived in 2014 with even faster speeds. (most common RAM type in desktops/laptops today)\n\n\nDouble Data Rate 5 SDRAM (DDR5)\nIntroduced in 2020, is starting to become more widely adopted.\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nMotherboards are usually compatible with only ONE generation of RAM. If you have a motherboard designed for DDR3, it cannot use DDR4 or DDR5.",
    "crumbs": [
      "Home",
      "Course Notes",
      "Hardware",
      "Internal Components"
    ]
  },
  {
    "objectID": "topics/hardware/internal-components.html#graphics-cards-gpu",
    "href": "topics/hardware/internal-components.html#graphics-cards-gpu",
    "title": "Internal Components",
    "section": "8. Graphics Cards (GPU) 🎨",
    "text": "8. Graphics Cards (GPU) 🎨\nAlso known as Video cards or Graphical Processing Units\nOne of the most interesting use of expansion slots is the addition of video cards, which contain a special chip called the GPU (Graphical Processing Unit).\nA specialized version of a CPU designed for graphical processing (producing complex output to display on a monitor)\nThe computation needed for graphical processing is generally useful for scientific computing as well (lots of data in parallel)\n\n\n\n\n\n\n\nVideo card location from the outside of the unit tower.\n\n\n\n\n\n\n\n\n\nVideo card (containing the GPU) provides additional video ports.\n\n\n\n\n\n\n\n\n\nFans on the video card itself.\n\n\n\nCPU vs GPU\n\nBoth consume a lot of power and generate a lot of heat\nMore powerful CPUs/GPUs require more powerful power supplies\n\nTDP: __ Thermal Design Power, measures the number of Watts needed to power the device__\n\nBoth have performance measured in  speed __ (operations/second) like RAM__\n\nGPU cannot replace the CPU because their architecture is different and meant for different purposes. GPU is great to parallelize computations! But the GPU is not as versatile as the CPU which has a larger instruction set\n\n\n\n\n\n\n\nDifference between CPU vs GPU internal structures.",
    "crumbs": [
      "Home",
      "Course Notes",
      "Hardware",
      "Internal Components"
    ]
  },
  {
    "objectID": "topics/hardware/internal-components.html#storage-devices",
    "href": "topics/hardware/internal-components.html#storage-devices",
    "title": "Internal Components",
    "section": "9. Storage Devices 💾",
    "text": "9. Storage Devices 💾\nStorage devices store data permanently. Some are installed inside the case (e.g. hard drive); Some are removable and portable (e.g. external flash drive).\n\n\n\n\n\n\nHard Drive.\n\n\n\n\n\n\n\nSolid State Drive.\n\n\n\n\n\n\n\n\n\nFloppy disk reader (obsolete).\n\n\n\n\n\n\n\nfloppy disks.\n\n\n\n\n\n\n\n\n\nUSB drive.\n\n\n\n\n\n\n\nHP’s fifth-generation of LTO tape drive technology capable of storing up to 3 TB per cartridge.\n\n\n\n\n\n\n\n\n\nMagnetic tape drives used to archive data. They are inexpensive and have high capacity, however they are slow for everyday use.\n\n\n\n\n\n\n\nCD/DVD Drive.\n\n\n\n\n\n\n\nFloppy Drive\nUses 3.5 inch floppy disks (or 5.25 inch floppy disks - older).\nLargely obsolete.\nMagnetic disks store up to 1.44Meg of data.\n\n\n\nFloppy disks plastic casing.\n\n\n\n\n\nA simple floppy disk\n\n\n\n\n\nHard Drive\n\nHard Disk Drive (HDD)\n\nTraditional hard drives.\nUses magnetic-based storage on a moving disk (somewhat like a vinyl player)\nMagnetic hard drives have drive motors that spin the magnetic platters and move the drive heads.\nSpeed measured in revolutions per minute\n\n\n\n\n\nInside a Hard Drive\n\n\n\n\nSolid State Drives (SSD)\n\nDo not have moving parts and use __ semi-conductors__ to store data.\nNon-volatile flash memory chips manage the storage on an SSD, resulting in faster access to data, higher reliability and reduced power usage.\n\n\n\n\n\nSolid State drive\n\n\n\n\n\nTape Drive\nMagnetic tapes are often used for backups or archiving data. Impractical for most individuals, but still used/created to this day! Cost effective when storing more than 1000 TB (lots and lots of data)\n\n\n\nTape drive\n\n\n\n\n\nOptical Drive\n\nUses lasers to read the data on the optical media.\n\nCD (compact disc) 700 Mb\nDVD (digital versatile disc) 4-8 Gb.\nBD (Blu-ray disc) 25-50 Gb.\n\nOptical media can be:\n\nPre-recorded (read only)\nRecordable (write once)\nRe-recordable (read and write multiple times).\n\n\n\n\n\nDVD Drive\n\n\n\n\n\nOptical Drive\n\n\n\n\nInterfaces Types\nInterface Types, in order of oldest to newest\nIDE\n\nIntegrated Drive Electronics / Advanced Technology Attachment.\nAlso called ATA.\nEarly drive controller interface, originally only supported hard drives up to 540 MB.\nUses a 40 pin connector, and maximum cable length of 46cm (18in).\n\nEIDE\n\nEnhanced Integrated Drive Electronics (also called ATA-2).\nUpdated version of IDE, supporting larger drives and direct memory access.\nUses a 40 pin connector.\n\nPATA\n\nParallel version of ATA.\nUsed internally due to maximum cable length of 46cm (18in).\nLargely replaced by SATA in newer systems.\n\nSATA (most commonly used today)\n\nSerial version of ATA, with slimmer and longer cables providing better airflow.\nUses 7-pin connector (less pins means less issues with electromagnetic interference).\nSATA hard drives tend to be quieter than IDE drives.\n\nNote: __ Hot-swapping is the ability to connect and disconnect a device while the computer is on.__\n\n\nExternal Flash Drive\nRemovable storage device that connects to a USB port.\nThese use the same type of non-volatile memory chips as SSDs and do not require power to maintain the data.\n\n\n\nSony 64 Gb USB Drive\n\n\n\n\n\nCruser 4Gb USB Drive\n\n\nTo install a drive internally in a computer, the connection interface on the drive must be the same as the controller on the motherboard.\nMotherboards support different types of interfaces.",
    "crumbs": [
      "Home",
      "Course Notes",
      "Hardware",
      "Internal Components"
    ]
  },
  {
    "objectID": "topics/hardware/internal-components.html#full-disection-of-a-computer",
    "href": "topics/hardware/internal-components.html#full-disection-of-a-computer",
    "title": "Internal Components",
    "section": "Full disection of a computer 🔬🖥️",
    "text": "Full disection of a computer 🔬🖥️",
    "crumbs": [
      "Home",
      "Course Notes",
      "Hardware",
      "Internal Components"
    ]
  },
  {
    "objectID": "topics/hardware/internal-components.htm#introduction",
    "href": "topics/hardware/internal-components.htm#introduction",
    "title": "Internal Components",
    "section": "Introduction",
    "text": "Introduction\nIn previous weeks we learned the basic behaviors that define computers – their ability to store, retrieve, and process information. This means that many simple devices, even non-electronics, can be considered computers.\nThe computers that we mostly are concerned with in the computer science profession, however, are generally complicated electronic devices made of many components. In this class, we are going to learn many of the fundamental components that make up modern computing devices.\nWe will continue with the internal, or system, components of a computer – each of these have their own set of interesting behaviors and properties that are worth understanding."
  },
  {
    "objectID": "topics/hardware/internal-components.htm#lesson-overview",
    "href": "topics/hardware/internal-components.htm#lesson-overview",
    "title": "Internal Components",
    "section": "Lesson overview",
    "text": "Lesson overview\nThe system components of a computer are responsible for the following behaviors:\n\nMain needs:\n\nstore information\nprocess information\nretrieve information\n\nAuxiliary needs:\n\nprotection from elements/interference\nsource of electrical power\ntemperature management for heat generated\nstructure\ncommunication between components\ntiers of storage/processing specialized for different purposes\n\n\nMany components will fulfil these needs. Here is a list of the components inside the system unit which we will learn about:\n\nCase\nPower Supply\nMotherboard\nInternal Connectors\nProcessor (CPU)\nCooling Devices\nMemory (RAM)\nGraphics processor (GPU)\nStorage Devices (CD, HDD, SSD, NVME/M2)"
  },
  {
    "objectID": "topics/hardware/internal-components.htm#definitions",
    "href": "topics/hardware/internal-components.htm#definitions",
    "title": "Internal Components",
    "section": "Definitions",
    "text": "Definitions\nWhen discussing components of any complicated machine, we should try to understand the following about those components:\nMake/Model\n\nThe make and model refer to the brand and specific product name of a component.\n\n\n\n\nExample\n\n\nHyundai Accent — where Hyundai is the make (manufacturer), and Accent is the model (product).\n\n\n\nWhy it matters:\n\nWho manufactures the component?\nAre there multiple versions of this model produced by the same brand?\nWhat distinguishes one version from another?\n\nProperties\n\nProperties describe the quantitative (numerical) and qualitative (descriptive) characteristics of a component that can be compared with similar components.\n\n\n\n\nExample\n\n\n\nQuantitative example The 2009 Hyundai Accent has a fuel efficiency of 29 MPG (miles per gallon).\nQualitative example The Hyundai Accent is a hatchback, not a sedan.\n\n\n\n\nWhy it matters:\n\nWhat performance can be expected from this component?\nIs there a cost-benefit advantage to choosing a component with more suitable properties?\nHow do these traits affect compatibility, efficiency, or user experience?\n\nThese two concepts—make/model and properties—will vary widely depending on the component. Understanding both is essential for every component we’ll discuss today."
  },
  {
    "objectID": "topics/hardware/internal-components.htm#case",
    "href": "topics/hardware/internal-components.htm#case",
    "title": "Internal Components",
    "section": "1. Case 🧊",
    "text": "1. Case 🧊\n\nComputer case helping air circulation inside the system unit. Source: Voltcave\nProvides protection and cooling for the internal components.\nAlso prevents damage from static electricity\n\n\n\n\nQuestion ❔\n\n\n\nWhat is static electricity?\nHow is the case projecting from that?\n\n\n\n\n\nUsually made of plastic, steel or aluminum.\nHelps the fans move air through all components:\n\nto replace warm air with cold air to keep components at stable temperatures\nto prevent build-up of dust\nThere exist many guides/studies for optimal airflow. E.g. Voltcave Guide"
  },
  {
    "objectID": "topics/hardware/internal-components.htm#power-supply-psu",
    "href": "topics/hardware/internal-components.htm#power-supply-psu",
    "title": "Internal Components",
    "section": "2. Power Supply (PSU) ⚡",
    "text": "2. Power Supply (PSU) ⚡\nMain purpose: Converts AC power (alternating current) from wall socket to DC power (direct current). Direct current (0 or 5V) is used to power digital circuits.\n\nComputers can only tolerate slight fluctuations in power without needing to shut down!. This is why we need to convert the electric current from the providers to direct current.\nPSUs have their own fans because energy conversion releases a lot of heat!\n\n\n\n\n\n\n\nNever open a power supply!\n\n\nThe capacitors contained within can keep a dangerous high voltage, high power charge long after being unplugged.\n\n\n\n\n\n\n\n\n\nPower Supply rated “Gold”\n\n\n\n\n\n\n\nRegular Power Supply.\n\n\n\n\n\n\n\n\nDifference between AC vs DC current.\n\n\n2.1 PSU Connectors 🔌🔋\n\nMost power supply connectors are : 20 + 4 pins\nUsually made up of wires of various colors:\n\nYellow 12V\nRed 5V\nOrange 3.3V\nOther colors may be ground 0V\n\n\n\n\n\nUsual PSU connectors\n\n\n2.2 PSU Ratings 🏅\nNot all PSUs efficiently convert AC to DC power!\nTo pick the right power supply for your machine, you must firstly know what’s the wattage required by your system. For this you might need to add all the internal components into the Wattage calculator which will then provide an estimate of the load wattage of this machine.\n\n\n\nExample\n\n\nIf you’re building a PC with an Intel Core i7-11700K CPU, an Nvidia GeForce RTX 3070 GPU, 16 gigabytes (GB) of RAM made up of two 8GB sticks, a 1TB solid-state drive (SSD), and a 1TB 7200RPM hard disk drive (HDD), then 512 watts of power would be recommended.\n\n\n\n80 Plus Standard\nThe 80 Plus standard was created to promote efficient enery use of a computer. When selecting a power supply, you might see that many suppliers will carry the 80 Plus certification labels. The efficiency of a power supply gives the ratio of AC power required from an electrical outlet to the useful power converted to DC to be used by a computer (the load wattage).\n\n\n\nExample\n\n\nA 75% efficient power supply requires 100W of AC input to provide 75 W of DC load wattage output to a computer. dissipating the remaining 25 W in as heat.\n\n\n\nIn the North America, the outlet voltage is roughly 115 V. The following table summerizes the efficiency levels for that voltage.\n\n\n\n% of Rated Load\n10%\n20%\n50%\n100%\n\n\n\n\n80 PLUS\n-\n80%\n80%\n80%\n\n\n80 PLUS Bronze\n-\n82%\n85%\n82%\n\n\n80 PLUS Silver\n-\n85%\n88%\n85%\n\n\n80 PLUS Gold\n-\n87%\n90%\n87%\n\n\n80 PLUS Platinum\n-\n90%\n92%\n89%\n\n\n80 PLUS Titanium\n90%\n92%\n94%\n90%\n\n\n\nAfter figuring out the required wattage for your machine, you can then calculate the input wattage required by the PSU to reach the desired load wattage of your machine.\n\nFor more detailed explanation: How to Choose a Power Supply\n\n2.3 Uninterruptible Power Supply\nIn the case of a power outage, an Uninterruptible Power Supply (UPS) can keep a computer running for a few minutes to several hours depending on the sophistication of the UPS. See Uninterruptible Power Supply for an example.\nIt’s basically a large battery that keeps charge during normal operation, and powers a computer using its stored charge when the building’s power is cut off."
  },
  {
    "objectID": "topics/hardware/internal-components.htm#motherboard",
    "href": "topics/hardware/internal-components.htm#motherboard",
    "title": "Internal Components",
    "section": "3. Motherboard 📟",
    "text": "3. Motherboard 📟\nMotherboards connect all the major components of the computer: the CPU, RAM, Expansion ports, etc.\n\n\n\nAn ASUS Pro B660M Motherboard. Most motherboards look something like this.\n\n\n\nComposed of various chips all combined into north  and south bridges\nMain circuit board and controls the electrical pathways (buses) found in a computer.\nThe buses allow data to travel between the various components of a computer.\nVarious form factors, e.g. AT, ATX, LPX, BTX, ITX.\n\n\n\n\nMotherboard form factors, from largest to smallest.\n\n\n3.1 Form Factors\n\nAT\n\nInvented by IBM in early 1980s, now obsolete.\nHuge in size (approximately 12 x 13 inches).\nNeeded lots of space for power supply and its various chips.\nLacked external ports, only allowed for monitor and keyboard.\n\nATX\n\nCreated in 1995 to meet the need for more connectors.\nGot off to a slow start but by 1998 became the most common form factor.\nBiggest change to AT was the rear panel with standard set of ports for expansion.\nPower supply position for better airflow, CPU and RAM positioned for easier access.\nVariations 12x9in (full size), 9.6x9.6in ( microATX )\n\nATX and microATX are the most common in personal desktop computers today"
  },
  {
    "objectID": "topics/hardware/internal-components.htm#internal-connectors",
    "href": "topics/hardware/internal-components.htm#internal-connectors",
    "title": "Internal Components",
    "section": "4. Internal Connectors 🔌",
    "text": "4. Internal Connectors 🔌\nThere are a variety of connectors used to connect components to the motherboard. Two main purposes:\n\nSignals : for communication/data transfer\nPower : not all components connect directly to the power supply, they get power from the motherboard\n\nMost connectors are keyed (can only be inserted one way).\n\n\n\n\n\n\nNote\n\n\nAlways check the pins if you have trouble with a connector.\n\n\n\n\n\n\n\n\n\nQuote\n\n\n“If it doesn’t go in like butter, it doesn’t go in at all” – never force a connection! you are likely going to damage the pins.\n\n\n\nExample connectors\n\n\n\n\n\n\nSATA Power Cables\n\n\n\n\n\n\n\nSATA 3 Cables for hard drives with angle connectors\n\n\n\n\n\n\n\n\n\nPCIe (for Video cards)."
  },
  {
    "objectID": "topics/hardware/internal-components.htm#cpu",
    "href": "topics/hardware/internal-components.htm#cpu",
    "title": "Internal Components",
    "section": "5. CPU 🧠",
    "text": "5. CPU 🧠\nThe CPU Most important element of the computer.\n\nResponsible for interpreting  and executing  the commands from the software.\ncommunicates instructions for all of the other components of the computer\nWhile the CPU is processing one step of the program, the remaining instructions and the data are stored in a special memory called cache.\n\n\n\n\nA CPU sitting in the CPU socket on the motherboard.\n\n\nWe’ll have a lecture dedicated to the CPU since it is so complicated.\nCPU Brands\nIntel: Historically the main CPU manufacturer\nAMD: Relatively recent competitor to Intel\n\n\n\nCPU naming conventions and associated properties."
  },
  {
    "objectID": "topics/hardware/internal-components.htm#cooling-devices",
    "href": "topics/hardware/internal-components.htm#cooling-devices",
    "title": "Internal Components",
    "section": "6. Cooling Devices 🪭",
    "text": "6. Cooling Devices 🪭\nThe flow of current between and within electronic components generates heat. Some devices are particularly powerful heat-generators, due to the large current they draw: ::: {.callout-note}\n\nCPUs typically come with their own cooling device\nCooling devices are built into GPUs and Power Supplies :::\n\nThere are two main types of cooling devices:\n\nFans inside the case increase airflow and removes heat.\nHeat sinks also draw heat away from the CPU core.\n\nFans\nThe flow of current between the electronic components generates heat.\nFans inside the case increase airflow and removes heat.\nOccasionally video cards or other components have their own fans to cool them.\n\n\n\n3D model of a computer Fan.\n\n\nHeat sinks\n\nHeat sinks also draw heat away from the CPU core.\n\nA heat sink is a piece of copper or aluminum that resides between the processor and the CPU fan.\nIt absorbs the heat from the processor and the fan disperses the heat.\n\n\n\n\n\nVariety of heat sinks."
  },
  {
    "objectID": "topics/hardware/internal-components.htm#main-memory-ram",
    "href": "topics/hardware/internal-components.htm#main-memory-ram",
    "title": "Internal Components",
    "section": "7. Main Memory (RAM) 📋",
    "text": "7. Main Memory (RAM) 📋\nReferred to as RAM (Random Access Memory). They’re connected to RAM slots on the motherboard:\n\n\n\nRAM slots.\n\n\nRAM is a collection of integrated circuits (chips). Temporary storage for data and programs that are being accessed by the CPU.\nVolatile memory : contents are erased when the computer is switched off. (or when power is lost)\n\n\n\nRAM sticks.\n\n\n7.1 Properties\nThere are four main properties of RAM to know:\n\nCapacity:  Total memory (in GB, GigaBytes)\n\nMore RAM means more capacity to hold and process large programs and files.\nMaximum installed is limited by the motherboard and the operating system.\n\nSpeed:  How many operations per second\n\nMany, millions or billions per second\n1MHz = 1 million / second, 1 GHz = 1 billion / second\n\nLatency : How much time delay between communications\nGeneration: See next slides\n\n7.2 RAM Form Factors\n\nSIMMs (Single In-Line Memory Modules)\n\nHave a single line of connectors.\nNow obsolete.\n\nDIMMs (Dual In-Line Memory Modules)\n\nHave two lines of connectors.\nHave Wider bus (supports 64 bits) 🡪 How can this help? More on this in the coming weeks.\nBecame dominant (no need to state that a memory module is a DIMM).\n\n\n7.3 RAM Generations\n\n\n\n\n\n\n\nType of RAM\nDescription\n\n\n\n\nSynchronous DRAM (SDRAM)\nDRAM that operates in time with the memory bus.Tied to the system clock like the CPU and the memory controller.Results in very little wasted time.\n\n\nDouble Data Rate SDRAM (DDR)\nDDR transfers data twice as fast as SDRAM.Larger buffer gives it a huge boost.\n\n\nDouble Data Rate 2 SDRAM (DDR2)\nDDR2 decreases noise making it faster than DDR.\n\n\nDouble Data Rate 3 SDRAM (DDR3)\nDDR3 doubles the clock rate of DDR2, consumes less power and generates less heat.\n\n\nDouble Data Rate 4 SDRAM (DDR4)\nDDR4 arrived in 2014 with even faster speeds. (most common RAM type in desktops/laptops today)\n\n\nDouble Data Rate 5 SDRAM (DDR5)\nIntroduced in 2020, is starting to become more widely adopted.\n\n\n\n\n\n\n\n\n\nNote\n\n\nMotherboards are usually compatible with only ONE generation of RAM. If you have a motherboard designed for DDR3, it cannot use DDR4 or DDR5."
  },
  {
    "objectID": "topics/hardware/internal-components.htm#graphics-cards-gpu",
    "href": "topics/hardware/internal-components.htm#graphics-cards-gpu",
    "title": "Internal Components",
    "section": "8. Graphics Cards (GPU) 🎨",
    "text": "8. Graphics Cards (GPU) 🎨\nAlso known as Video cards or Graphical Processing Units\nOne of the most interesting use of expansion slots is the addition of video cards, which contain a special chip called the GPU (Graphical Processing Unit).\nA specialized version of a CPU designed for graphical processing (producing complex output to display on a monitor)\nThe computation needed for graphical processing is generally useful for scientific computing as well (lots of data in parallel)\n\n\n\nVideo card location from the outside of the unit tower.\n\n\n\n\n\nVideo card (containing the GPU) provides additional video ports.\n\n\n\n\n\nFans on the video card itself.\n\n\nCPU vs GPU\n\nBoth consume a lot of power and generate a lot of heat\nMore powerful CPUs/GPUs require more powerful power supplies\n\nTDP: __ Thermal Design Power, measures the number of Watts needed to power the device__\n\nBoth have performance measured in  speed __ (operations/second) like RAM__\n\nGPU cannot replace the CPU because their architecture is different and meant for different purposes. GPU is great to parallelize computations! But the GPU is not as versatile as the CPU which has a larger instruction set\n\n\n\nDifference between CPU vs GPU internal structures."
  },
  {
    "objectID": "topics/hardware/internal-components.htm#storage-devices",
    "href": "topics/hardware/internal-components.htm#storage-devices",
    "title": "Internal Components",
    "section": "9. Storage Devices 💾",
    "text": "9. Storage Devices 💾\nStorage devices store data permanently. Some are installed inside the case (e.g. hard drive); Some are removable and portable (e.g. external flash drive).\n\n\n\n\n\n\nHard Drive.\n\n\n\n\n\n\n\nSolid State Drive.\n\n\n\n\n\n\n\n\n\nFloppy disk reader (obsolete).\n\n\n\n\n\n\n\nfloppy disks.\n\n\n\n\n\n\n\n\n\nUSB drive.\n\n\n\n\n\n\n\nHP’s fifth-generation of LTO tape drive technology capable of storing up to 3 TB per cartridge.\n\n\n\n\n\n\n\n\n\nMagnetic tape drives used to archive data. They are inexpensive and have high capacity, however they are slow for everyday use.\n\n\n\n\n\n\n\nCD/DVD Drive."
  },
  {
    "objectID": "topics/hardware/internal-components.htm#full-disection-of-a-computer",
    "href": "topics/hardware/internal-components.htm#full-disection-of-a-computer",
    "title": "Internal Components",
    "section": "Full disection of a computer 🔬🖥️",
    "text": "Full disection of a computer 🔬🖥️"
  },
  {
    "objectID": "topics/hardware/external-components.html",
    "href": "topics/hardware/external-components.html",
    "title": "External components",
    "section": "",
    "text": "All of these devices, except one, would be considered in external component of a modern desktop computer. Which one is not? Figure retrieved from Innovation it solution, original source unknown.",
    "crumbs": [
      "Home",
      "Course Notes",
      "Hardware",
      "External components"
    ]
  },
  {
    "objectID": "topics/hardware/external-components.html#introduction",
    "href": "topics/hardware/external-components.html#introduction",
    "title": "External components",
    "section": "Introduction",
    "text": "Introduction\nLast week we learned the basic behaviors that define computers – their ability to store, retrieve, and process information. This means that many simple devices, even non-electronics, can be considered computers.\nThe computers that we mostly are concerned with in the computer science profession, however, are generally complicated electronic devices made of many components. In this class, we are going to learn many of the fundamental components that make up modern computing devices.\nToday, we will start with the external, or peripheral, components of a computer – each of these have their own set of interesting behaviors and properties that are worth understanding.\nMany peripheral components of a computer can broadly be divided into two categories:\n\nInput Devices: devices that accept data and instructions from a user to a computer.\nOutput Devices: devices that present data and information to the user from a computer.\n\nWe will cover many examples of each.",
    "crumbs": [
      "Home",
      "Course Notes",
      "Hardware",
      "External components"
    ]
  },
  {
    "objectID": "topics/hardware/external-components.html#lesson-overview",
    "href": "topics/hardware/external-components.html#lesson-overview",
    "title": "External components",
    "section": "Lesson overview",
    "text": "Lesson overview\nLearn the history, behavior, and important properties of Input and Output devices\n\nInput devices:\n\nKeyboards\nMice\nControllers\nCameras\nTouchscreens\nScanners\n\nOutput devices:\n\nMonitors\nProjectors\nPrinters\nSpeakers",
    "crumbs": [
      "Home",
      "Course Notes",
      "Hardware",
      "External components"
    ]
  },
  {
    "objectID": "topics/hardware/external-components.html#input-devices",
    "href": "topics/hardware/external-components.html#input-devices",
    "title": "External components",
    "section": "Input Devices",
    "text": "Input Devices\nInput Devices are devices that accept data and instructions from a user to a computer.\n\nMouse\nUsed to navigate the graphical user interface (GUI). There are many types of mice, distinguished by tracking technology and by use case\nTechnology:\n\nMechanical mice use a ball to measure movement (obsolete now – why?)\nOptical mice use light sources (such as LED, or more precise Laser).1\nLED mice will often have a visible red light and require a non-glossy surface to properly work. Here’s an detailed explanation on how they work.\n\nLaser mice provide higher precision and sensitivity, detecting fine movements and can work on any surface including glass surfaces. However, they are susceptible to sensor acceleration, which causes inconsistent cursor movements based on the speed of movement.\n\nTypes of mouse\n\nGaming mouse: They offers additional buttons. These buttons are sometimes programmable. This is useful in a game and can replace a combination of instructions useful for realtime games.\n\nErgonomic mouse: provides optimum comfort and avoids repetitive strain injuries.\nWireless mouse: Connects to a computer via bluetooth or Wi-Fi, or using a receiver that plugs to the computer via USB.\nMany more.\n\n\n\n\n\n\n\nThe prototype computer mouse Doug Engelbart used in the Mother of All Demos in 1968.\n\n\n\n\n\n\n\nMx Laser Cordless mouse introduced in 2004.\n\n\n\n\n\n\n\n\n\nA4Tech WOP-35 Optical mouse LED introduced in 2002.\n\n\n\n\n\n\n\nMechanical mouse (unknown manufacturer) used in 80s and 90s”\n\n\n\n\n\n\n\nKeyboard\nUsed to enter text commands. Most commonly used is the QWERTY layout (used in typewriters since 1873). Other layouts include QWERTZ (Germany/Switzerland) and AZERTY (France) and DVORAK (more ergonomic keyboard layout for English proposed by August Dvorak).\nVariations include wired or wireless keyboards and numeric keypads. Ergonomic designs are recently becoming more popular.\n\n\n\n\n\n\n\nGoldtouch Adjustable Ergonomic Keyboard.\n\n\n\n\n\n\n\n\n\nMicrosoft Natural Ergonomic Keyboard 4000.\n\n\n\n\n\n\n\n\n\nGoldtouch Numeric Keypad USB.\n\n\n\n\nInput Devices: Others\n\nGamepads or joysticks are used for playing games and running simulations.\nDigital / video cameras and webcams create images and videos.\nBiometric devices use features unique to an individual user (e.g. fingerprint).\nTouchscreens have a pressure-sensitive panel.\nScanners digitize images or documents so they can be stored as files.\nDigital Tablets (sometimes called Digitizers) allow the user to create images or artwork using a stylus.\nMedia card readers read/write data from/to different types of media cards (SD cards, video game cartridges, etc.)\n\n\nActivity: How well Do you Know your keyboard?",
    "crumbs": [
      "Home",
      "Course Notes",
      "Hardware",
      "External components"
    ]
  },
  {
    "objectID": "topics/hardware/external-components.html#output-devices",
    "href": "topics/hardware/external-components.html#output-devices",
    "title": "External components",
    "section": "Output Devices",
    "text": "Output Devices\nOutput Devices are devices that present data and information to the user from a computer.\n\nMonitors\nThere are many different types of monitors use different technologies to create an image. However, the principles are the same:\n\nDigital representation of image to display is sent to the monitor\nThe monitor produces each pixel (the smallest element of the screen or “atom” of monitor displays) using some deterministic physical technology\nLight from the monitor reaches us as a useful/pleasing image.\n\nThe following sections are the main technologies used today (from oldest to newest)\n\nCathode Ray Tube (CRT)\nCathode Ray Tube (CRT) monitors are very complicated, very cool, moderately dangerous, and mostly obsolete!\n\nThe most common type of consumer and industry television before ~2010\nBasically: a tungsten coil is heated in a vacuum until it sheds electrons, those electrons are accelerated by an electric field and guided by magnets to hit a phosphor coated glass display to emit light in a pixel grid\nObsolete since today their are lighter, simpler higher resolution technologies\nStill used today for some applications due to zero latency .\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAnimation demonstrating the electron beam scanning the phosphorus screen and producing coloured light dots for each pixel. Image Source: Wikipedia\n\n\n\n\n\nPlasma\nPlasma monitors use tiny cells of ionised gas that light up when stimulated by electricity.\n\nOften used in home theatre applications due to accurate video representation.\nHigh levels of brightness, deep black levels and very wide colour range.\nHave shorter life span, susceptible to “screen burn-in” (this is why screensavers are called “screen savers”! Same for CRT).\n\nPros\n\nPlasma cell will produce light that looks good from every angle, it has high refresh rate (videos are smoother)\n\nCons\n\nBUT! Consumes a lot of electricity\nDoesn’t work at high altitudes! (due to the low pressure)\n\n\n\n\nPlasma is a chemical state of molecules when molecules in state of gas are heated up (excited with electric charge). Typical Plasma displays have two glass plates sandwiching hundreds of thousands of cells containing plasma. Two sets of electrodes will provide some charges which will excite the plasma Which will release photons at three different wavelength (either red, green or blue)\n\n\n\n\nLiquid Crystal Display (LCD)\nAn LCD Screen is made up of layers of very thin glass, liquid crystal, metal and dielectrics. Liquid cystal is a modelcule between liquid (not ordered and constant motion) and crystal (ordered fashion). This technology allows for precise control of color without the need to ionise gas with powerful electronics.\n\nCommonly used in flat panel monitors and laptops.\nConsists of a white backlight, two polarizing filters, and liquid crystal solution.\nAn electronic current aligns and controls the crystals so that light can pass through them.\n\nPros\n\nAllow the use of flat screens!\n\nCons\n\nDue to the backlight, black screens are never perfectly black! It always lets some light pass through.\nBecause of the polarizing filters, different viewing angles impact heavily the appearance of the image.\nSomewhat inefficient due to the many layers reducing the brightness of the screen.\n\n\n\n\n\n\n\n\nThe polarizing filter lets only one orientation of the light pass through. An LCD Screen is made up of layers of very thin glass, liquid crystal, metal and dielectrics. The projector beam will emit white light which contains all wavelengths. Liquid crystal is a molecule between liquid and crytal state (ordered vs unordered) which has the characteristics of changing orientation under specific voltage. This allows for a precise control of the passage of light. To transform the white light into colored light, a color filter is placed on the outter face - made of pigments which will absorb all colors execept the color that is passing (red, blue or green). This video provides a full explanation\n\n\n\n\nLight emitting diode (LED)\n\nAn LCD display that uses LED backlighting instead of a white backlight to light the display. It still uses Liquid crystals (LCD technology). The brightness of each RGB LED is controlled programmatically to produce each pixel.\n\nPros\n\nThinner (no layers), lighter and brighter, and displays better contrast\nLower power  consumption.\nBetter representation of blacks (compared to original LCDs)\nImproved color filters using quantum dots, which creates vibrant colors.\nHave become the most affordable types of Monitors.\nLEDs backlight lasts for very long making them less susceptible to burn-in compared to OLED screens.\n\nCons\n\nNot yet a perfect representation of black!\nThe individual light diodes level of light is not controlled, it’s still requires liquid crystals to modulate the light.\nThis means that polarized light is still used reducing the viewing angles compared to OLED screens.\n\n\n\n\n\n\n\n\nLED Grid used for backlighting of each individual pixel. -\n\n\n\n\nOrganic LED (OLED)\nOLED displays are similar to LED, but no backlighting required – the organic material used to create these displays emits light when an electrical current is applied.\n\nSimilar to LED, but no backlighting required – the material used to create these displays emits light when an electrical current is applied .\n\nPros\n\nAllows for perfect representation of dark colors unlike all other monitor technologies. Also allows for flexible and transparent monitors\n\nCons\n\nMore expensive to produce\nMore susceptible to screen-burn-in than LCD or LED (but better than Plasma and CRT in this respect)\n\nHere’s a great video (8 mins) explaining both physical and software technologies required to make the above monitors work.\nWith LCD, LED, and OLED, we finally get to the most modern monitor technologies. These are used in our labs, most computers, laptops. They’re ordered here approximately in order of lowest (LCD) -&gt; highest (OLED) quality, though pros and cons exist for each.\nSee here for more information: https://en.wikipedia.org/wiki/Comparison_of_CRT,_LCD,_Plasma,_and_OLED_displays.\n\n\n\nMetrics for choosing the right monitor\nThe first step is to define how the monitor will be used: personal vs. professional use, gaming, graphic design, content creation, etc. You should look for a monitor that meets your needs based on a few common metrics:\n\nResolution: Indicates how many pixels are used to display an image and how small they are. Higher-resolution monitors (e.g., 4K) offer sharper and more detailed images.\nRefresh Rate: Refers to how many times per second the display updates the image, measured in hertz (Hz), such as 60Hz. It is closely related to the frames per second (FPS) that the computer’s graphics card can output.\nColor Accuracy: Describes how accurately the display reproduces colors. There are various standards to measure color accuracy, but this can be a somewhat subjective criterion depending on the use case.\nBrightness: Measures the intensity of light emitted by the display, expressed in nits. Optimal brightness levels range from 100–300 nits for indoor use and 400–700 nits for outdoor use.\nContrast: Indicates the difference in intensity between the brightest whites and the darkest blacks on the screen. It is typically expressed as a ratio (e.g., 1000:1). Good contrast enhances image sharpness, especially around edges and areas with opposing colors.\n\n\n\nDisplay Technologies Summary\n\n\n\n\n\n\n\n\n\n\nFeature\nPlasma\nLCD (CCFL backlight)\nLED (LCD with LED backlight)\nOLED\n\n\n\n\nLight Source\nIonized gases excite phosphors (self-light)\nCold Cathode Fluorescent Lamps (CCFL) backlight\nLight Emitting Diodes (LED) backlight\nSelf-emitting organic pixels (no backlight)\n\n\nThickness\nBulky, heavy\nThicker than LED\nThinner, lighter than LCD\nUltra-thin, even flexible\n\n\nBrightness\nHigh, but reflective in bright rooms\nModerate\nHigh, adjustable\nHigh, but may degrade over time\n\n\nContrast Ratio\nVery good (deep blacks, but not infinite)\nLower (backlight bleed)\nBetter than LCD, especially with local dimming\nExcellent (true blacks, infinite contrast)\n\n\nViewing Angles\nVery wide\nLimited\nBetter than LCD but not as good as Plasma/OLED\nExcellent, wide and consistent\n\n\nColor Accuracy\nVivid, rich colors\nGood, but limited by backlight\nBetter than LCD\nExcellent, most accurate and vibrant\n\n\nRefresh Rates\nVery fast (good for motion, sports)\nSlower\nFaster than LCD\nVery fast\n\n\nPower Use\nHigh (power-hungry, generates heat)\nHigher than LED\nLower (more efficient than LCD & Plasma)\nEfficient for dark scenes; higher on full bright screen\n\n\nBurn-in Risk\nHigh\nVery low\nVery low\nMedium (improved but possible)\n\n\nLifespan\nShorter (phosphors fade)\nLong\nLong\nMedium to long (organic material degrades)\n\n\nPrice\nExpensive (when available)\nCheapest\nMid-range\nMost expensive\n\n\nCurrent Status\nObsolete (no longer made)\nRare now, replaced by LED\nMost common today\nPremium, used in high-end TVs, monitors, smartphones\n\n\n\n\n\n\n\nPrinters\nPrinters take data from a computer and generate output on paper: Basic principles\n\nSimilar to monitor (high quantity of small, well placed “pixels” → the visual quality of a coherent image)\nRather than orienting light photons on a screen, printers deposit liquid stains on to paper. The physical setup is different, but the same principles are at work.\n\n\n\n\nA high enough quantity of toasted bread produces the qualitative impression of a human eye in this “piece” of art. Printers (and monitors) use much higher quantities of “pixels” than depicted here!\n\n\n\nDot-matrix printers\n\nUses print heads containing pins which produce patterns of dots on the paper by mechanical impact (pressing).\nInexpensive and typically print at a speed of 100 - 600 characters per second.\n(Optional) See https://en.wikipedia.org/wiki/Dot_matrix_printer for more detail on history and technology\nWhile still in use for particular applications (printing receipts for e.g.), these are now obsoleted by ink-jet printers.\n\n\n\nInk-jet printers\n\n\n\n\n\n\n\nInk-jet printer technology. This animation shows how droplets are pushed through the nozzle of the printing head\n\n\n\nUses tiny droplets of ink to produce images.\nHeat is applied to an ink reservoir, which pushes ink bubbles through a nozzle in a controlled manner.\nThe ink liquid droplets are smaller in diameter than a human hair! Many of these added together produce the quality of a coherent image.\nQuieter than dot-matrix, and also provide better speed and higher quality.\n\n\n\n\n\n\n\nInk-based color printer.\n\n\n\n\n\n\n\nInk jet cartridge operation. Image source: youtube.com\n\n\n\n\n\n\n\nLaser Printers\n\n\n\nLaser Printer. This animation shows how the ink powder sticks to the rotating drum. The drum contains a special coating to which allows the toner (ink powder) to stick. A laser beam then conveys information to the drum, neutralizing and detaching some toner. As the paper rolls by the drum, the toner is transferred onto the paper. A hot roller then bonds toner to the paper.\n\n\n\nExpensive when they were initially introduced.\nProduce high-quality output quietly at a high speed.\nProduces images by directing a laser beam at a mirror which bounces the beam onto a drum.\n\n\n\n\n\n\n\n\nLaser Printer\n\n\n\n\n\nOther output devices\n\nProjectors\nSpeakers\nHeadphones",
    "crumbs": [
      "Home",
      "Course Notes",
      "Hardware",
      "External components"
    ]
  },
  {
    "objectID": "topics/hardware/external-components.html#connectors",
    "href": "topics/hardware/external-components.html#connectors",
    "title": "External components",
    "section": "Connectors",
    "text": "Connectors\nConnectors are how to get the computer to talk to all these output devices!\n\nCables\nSome technical terms:\n\nCable (electric) : The insulated copper wire that carries electrical/digital signals from devices to/from computers\nCable (optical) : The insulated glass tube that carries digital signals in the form of light between devices and computers\nPort : The slot where the insertable end of USB cable is connected to the computer\n“Male” / “Female” cable ends : Distinguishing between the insertable end and the receptacle end for cables\nConverter : A device that allows different standards/types of connectors to be used together\n\n\nElectrical cables\nTransmits an electrical signal on a conducting wire, insulated to protect the signal/surroundings\n\n\n\nOptical cables\nTransmits a signal in the form of light. Very fast! (speed of light in glass).\n\nA short paper (5 pages) comparing the two cable technologies in more detail: Fibre Optics vs Copper Cabling: Understanding the Differences\n\n\n\nAnalog versus Digital signal cables\n\nAnalog cables carry a continuous and fluctuating electrical signal representing the original penomena (example sound waves).\nDigital cables transmit a binary discrete (sequence of 1 or 0)\n\n\n\nUSB\n\nUniversal Serial Bus is used to connect most modern devices to computers.\nBack in the day, mice/keyboards/external storage, speakers, etc., all had different cables. These have now been mostly unified under the USB standard.\nUSB connectors can transmit both power (e.g. charging phones) and information (data). Despite being “Universal” there are an incredible number of USB types.\n\n\n\n\nDifferent types of USB connectors\n\n\n\n\nUSB Standards\nUSB “Number” Standards determines the transmission speed & power\n\n🐢 USB 2 (slower, less power)\n🏎️ USB 3 (faster, more power)\n🚀 USB 4 (super fast, high power)\n\nUSB “Letter” Standards refer to the physical design of the connector and the port\n\ne.g. USB C and USB A are incompatible interfaces, cannot be interchanged.\n\n\n\n\nDifferent types of USB standards.\n\n\n\n\n\nNewer standards are backwards compatible (e.g. USB 3.1 cable works in USB 1.1 port at USB 1.1 speed/power)\n\n\n\n\n\nAudio\nA headphone jack is a port into which you plug your headphones. Sometimes called AUX, audio jack or phone jack. The plug, on the other hand,is the part at the end of your headphones’ cable that is inserted into the jack. Most commonly the standard headphone jack (TSR connector). Available in several sizes, most commonly 3.5mm or ⅛” mini audio jack. Can be color coded - microphone (pink), speaker (green).\n\n\n\n\n\n\nHeadphone Jack vs Plug\n\n\n\n\n\n\n\nVarious sizes of TSR connector (headphone jack)\n\n\n\n\n\nFor higher-end audio, we can use fiberoptic cables as these can transmit larger amounts of data more quickly, which is required for producing a high-quality audio signal.\n\n\nVideo\n\n\n\n\n\n\n\nDifferent types of video cables\n\n\nVGA cable is analog signal cable used for computer monitors. It had 15 pins arranged in 3 rows. It’s a low resolution cable and now obsolete. There exist converter cables to connect VGA monitors to newer computers.\nMiniVGA is a variant found on laptops.\nDVI cabe is analog/digital upgrade from VGA, capable of higher resolutions. It isn’t used as much today. MiniDVI and MicroDVI on “thin” laptops.\nS-Video commonly used for DVD players, camcorders and older consoles.\n\n\n\n\n\n\nVGA, DVI, and RCA cables\n\n\n\n\n\n\n\nDVI. Can be distinguished from VGA by noticing that it is a much wider interface with many more pins.\n\n\n\n\n\n\n\n\n\nS-video\n\n\n\n\n\n\n\nA converter from mini-DP to three possible outputs: DP, DVI, and HDMI\n\n\n\n\n\nRCA cables include composite video (yellow) and stereo audio cables (red for right; white/black for left). It’s mainly an analog cable. Component video offers a better picture. &gt; RCA stands for Radio Corporation America.\nHDMI is the new standard for audio and video transmission in a single cable. It transmits digital signal only. It allows for a single cable to carry both audio and video simplifying connections and improving signal quality.\nDisplayPort (and Mini DisplayPort) more commonly used in desktop computers. It transmits digital signal only. It support the transmission of audio, video, and other additional data, as well as multi-channel audio, and support multi monitor configurations. It is  widely used in professional applications and high-performance computing.\n\n\n\n\n\n\nRGA.\n\n\n\n\n\n\n\nHDMI.\n\n\n\n\n\n\n\nDisplay Port.\n\n\n\n\n\n\n\nData\neSATA (External Serial Advanced Technology Attachement) is used internally to connect the hard drive to the motherboard but can also be used for portable hard drives. They provide a high-speed interface for transferring data between the external storage device and the host system. We will see them in the upcoming labs.\n\nThe current trend has seen a decline in the use of eSATA by USB type C.\n\n\n\n\nNetworking\nTelephone cable (RJ11) used for connecting to the internet through DSL/ADSL modems. Standard phone cable has 4 wires; connector has 4 pins. Clip helps to maintain tight connection.\nEthernet (RJ45) is the standard for wired networking. Based on Cat5 twisted pair cable, made from 8 individual wires. Connector looks similar to phone plug but is thicker and wider. Also uses a clip to maintain tight connection.\n\n\n\n\n\n\ntelephone cable RJ11\n\n\n\n\n\n\n\nEthernet cable RJ45",
    "crumbs": [
      "Home",
      "Course Notes",
      "Hardware",
      "External components"
    ]
  },
  {
    "objectID": "topics/hardware/external-components.html#knowledge-check",
    "href": "topics/hardware/external-components.html#knowledge-check",
    "title": "External components",
    "section": "Knowledge check",
    "text": "Knowledge check\n\nWhich statement about computers is INCORRECT?\n\n\nIt is a digital device.\nFor a given input, it reliably produces the same output every time.\nIt contains a CPU.\nComputers always operate with 100% accuracy and never make errors in processing information.\n\n\nWhich statement about Plasma screens is INCORRECT?\n\n\nThey contain ionized gas that lights up when stimulated by electricity.\nThey don’t work well at high altitudes.\nThey are power efficient.\nThey have a wide range of colors.\n\n\nWhich of the following is NOT a common type of monitor for laptops and desktop computers?\n\n\nLiquid crystal display (LCD)\nLight-emitting-diode (LED)\nOrganic light-emitting-diode (OLED)\nCathode ray tube (CRT)\n\n\nWhich of the following display technologies allows for a perfect representation of blacks? (Select all that applies.)\n\n\nCRT\nPlasma\nLCD\nLCD with LED backlight\nOLED\n\n\nWhich of the following display technologies are most susceptable to sreen burn-in. (Select all that applies.)\n\n\nCRT\nPlasma\nLCD\nLCD with LED backlight\nOLED\n\n\nWhich of the following displays allow for the most vivid images? (Select all that applies.)\n\n\nCRT\nPlasma\nLCD\nLCD with LED backlight\nOLED\n\n\nWhich of the following displays have the best viewing angles?\n\n\nCRT\nPlasma\nLCD\nLCD with LED backlight\nOLED\n\n\nWhich of the following displays allows for infinite contrast?\n\n\nCRT\nPlasma\nLCD\nLCD with LED backlight\nOLED\n\n\n\n\n\n\n\nCautionExpand to see the answers\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\na., b., e.\n\n\n\n\n\nb., e.",
    "crumbs": [
      "Home",
      "Course Notes",
      "Hardware",
      "External components"
    ]
  },
  {
    "objectID": "topics/hardware/external-components.html#footnotes",
    "href": "topics/hardware/external-components.html#footnotes",
    "title": "External components",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nGood notes on history and explanation of how/why they work “Optical mice use image sensors to image naturally occurring texture [on the surface they are placed]…. These surfaces, when lit at a grazing angle by a light emitting diode, cast distinct shadows that resemble a hilly terrain lit at sunset. Images of these surfaces are captured in continuous succession and compared with each other to determine how far the mouse has moved.” https://en.wikipedia.org/wiki/Computer_mouse https://en.wikipedia.org/wiki/Optical_mouse↩︎",
    "crumbs": [
      "Home",
      "Course Notes",
      "Hardware",
      "External components"
    ]
  },
  {
    "objectID": "topics/hardware/external-components.htm#introduction",
    "href": "topics/hardware/external-components.htm#introduction",
    "title": "External components",
    "section": "Introduction",
    "text": "Introduction\nLast week we learned the basic behaviors that define computers – their ability to store, retrieve, and process information. This means that many simple devices, even non-electronics, can be considered computers.\nThe computers that we mostly are concerned with in the computer science profession, however, are generally complicated electronic devices made of many components. In this class, we are going to learn many of the fundamental components that make up modern computing devices.\nToday, we will start with the external, or peripheral, components of a computer – each of these have their own set of interesting behaviors and properties that are worth understanding.\nMany peripheral components of a computer can broadly be divided into two categories:\n\nInput Devices: devices that accept data and instructions from a user to a computer.\nOutput Devices: devices that present data and information to the user from a computer.\n\nWe will cover many examples of each."
  },
  {
    "objectID": "topics/hardware/external-components.htm#lesson-overview",
    "href": "topics/hardware/external-components.htm#lesson-overview",
    "title": "External components",
    "section": "Lesson overview",
    "text": "Lesson overview\nLearn the history, behavior, and important properties of Input and Output devices\n\nInput devices:\n\nKeyboards\nMice\nControllers\nCameras\nTouchscreens\nScanners\n\nOutput devices:\n\nMonitors\nProjectors\nPrinters\nSpeakers"
  },
  {
    "objectID": "topics/hardware/external-components.htm#input-devices",
    "href": "topics/hardware/external-components.htm#input-devices",
    "title": "External components",
    "section": "Input Devices",
    "text": "Input Devices\nInput Devices are devices that accept data and instructions from a user to a computer.\nMouse\nUsed to navigate the graphical user interface (GUI). There are many types of mice, distinguished by tracking technology and by use case\nTechnology:\n\nMechanical mice use a ball to measure movement (obsolete now – why?)\nOptical mice use light sources (such as LED, or more precise Laser).1\nLED mice will often have a visible red light and require a non-glossy surface to properly work. Here’s an detailed explanation on how they work.\n\nLaser mice provide higher precision and sensitivity, detecting fine movements and can work on any surface including glass surfaces. However, they are susceptible to sensor acceleration, which causes inconsistent cursor movements based on the speed of movement.\n\nTypes of mouse\n\nGaming mouse: They offers additional buttons. These buttons are sometimes programmable. This is useful in a game and can replace a combination of instructions useful for realtime games.\n\nErgonomic mouse: provides optimum comfort and avoids repetitive strain injuries.\nWireless mouse: Connects to a computer via bluetooth or Wi-Fi, or using a receiver that plugs to the computer via USB.\nMany more.\n\n\n\n\n\n\n\nThe prototype computer mouse Doug Engelbart used in the Mother of All Demos in 1968.\n\n\n\n\n\n\n\nMx Laser Cordless mouse introduced in 2004.\n\n\n\n\n\n\n\n\n\nA4Tech WOP-35 Optical mouse LED introduced in 2002.\n\n\n\n\n\n\n\nMechanical mouse (unknown manufacturer) used in 80s and 90s”\n\n\n\n\n\nKeyboard\nUsed to enter text commands. Most commonly used is the QWERTY layout (used in typewriters since 1873). Other layouts include QWERTZ (Germany/Switzerland) and AZERTY (France) and DVORAK (more ergonomic keyboard layout for English proposed by August Dvorak).\nVariations include wired or wireless keyboards and numeric keypads. Ergonomic designs are recently becoming more popular.\n\n\n\nGoldtouch Adjustable Ergonomic Keyboard.\n\n\n\n\n\nMicrosoft Natural Ergonomic Keyboard 4000.\n\n\n\n\n\nGoldtouch Numeric Keypad USB.\n\n\nInput Devices: Others\n\nGamepads or joysticks are used for playing games and running simulations.\nDigital / video cameras and webcams create images and videos.\nBiometric devices use features unique to an individual user (e.g. fingerprint).\nTouchscreens have a pressure-sensitive panel.\nScanners digitize images or documents so they can be stored as files.\nDigital Tablets (sometimes called Digitizers) allow the user to create images or artwork using a stylus.\nMedia card readers read/write data from/to different types of media cards (SD cards, video game cartridges, etc.)\n\n\nActivity: How well Do you Know your keyboard?\n\nGood notes on history and explanation of how/why they work “Optical mice use image sensors to image naturally occurring texture [on the surface they are placed]…. These surfaces, when lit at a grazing angle by a light emitting diode, cast distinct shadows that resemble a hilly terrain lit at sunset. Images of these surfaces are captured in continuous succession and compared with each other to determine how far the mouse has moved.” https://en.wikipedia.org/wiki/Computer_mouse https://en.wikipedia.org/wiki/Optical_mouse"
  },
  {
    "objectID": "topics/hardware/external-components.htm#output-devices",
    "href": "topics/hardware/external-components.htm#output-devices",
    "title": "External components",
    "section": "Output Devices",
    "text": "Output Devices\nOutput Devices are devices that present data and information to the user from a computer.\nMonitors\nThere are many different types of monitors use different technologies to create an image. However, the principles are the same:\n\nDigital representation of image to display is sent to the monitor\nThe monitor produces each pixel (the smallest element of the screen or “atom” of monitor displays) using some deterministic physical technology\nLight from the monitor reaches us as a useful/pleasing image.\n\nThe following sections are the main technologies used today (from oldest to newest)\nCathode Ray Tube (CRT)\nCathode Ray Tube (CRT) monitors are very complicated, very cool, moderately dangerous, and mostly obsolete!\n\nThe most common type of consumer and industry television before ~2010\nBasically: a tungsten coil is heated in a vacuum until it sheds electrons, those electrons are accelerated by an electric field and guided by magnets to hit a phosphor coated glass display to emit light in a pixel grid\nObsolete since today their are lighter, simpler higher resolution technologies\nStill used today for some applications due to zero latency .\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAnimation demonstrating the electron beam scanning the phosphorus screen and producing coloured light dots for each pixel. Image Source: Wikipedia"
  },
  {
    "objectID": "topics/hardware/external-components.htm#connectors",
    "href": "topics/hardware/external-components.htm#connectors",
    "title": "External components",
    "section": "Connectors",
    "text": "Connectors\nConnectors are how to get the computer to talk to all these output devices!\nCables\nSome technical terms:\n\nCable (electric) : The insulated copper wire that carries electrical/digital signals from devices to/from computers\nCable (optical) : The insulated glass tube that carries digital signals in the form of light between devices and computers\nPort : The slot where the insertable end of USB cable is connected to the computer\n“Male” / “Female” cable ends : Distinguishing between the insertable end and the receptacle end for cables\nConverter : A device that allows different standards/types of connectors to be used together\n\nElectrical cables\nTransmits an electrical signal on a conducting wire, insulated to protect the signal/surroundings\n\nOptical cables\nTransmits a signal in the form of light. Very fast! (speed of light in glass).\n\nA short paper (5 pages) comparing the two cable technologies in more detail: Fibre Optics vs Copper Cabling: Understanding the Differences\nAnalog versus Digital signal cables\n\nAnalog cables carry a continuous and fluctuating electrical signal representing the original penomena (example sound waves).\nDigital cables transmit a binary discrete (sequence of 1 or 0)\n\nUSB\n\nUniversal Serial Bus is used to connect most modern devices to computers.\nBack in the day, mice/keyboards/external storage, speakers, etc., all had different cables. These have now been mostly unified under the USB standard.\nUSB connectors can transmit both power (e.g. charging phones) and information (data). Despite being “Universal” there are an incredible number of USB types.\n\n\n\n\nDifferent types of USB connectors"
  },
  {
    "objectID": "topics/hardware/external-components.htm#knowledge-check",
    "href": "topics/hardware/external-components.htm#knowledge-check",
    "title": "External components",
    "section": "Knowledge check",
    "text": "Knowledge check\n\nWhich statement about computers is INCORRECT?\n\n\nIt is a digital device.\nFor a given input, it reliably produces the same output every time.\nIt contains a CPU.\nComputers always operate with 100% accuracy and never make errors in processing information.\n\n\nWhich statement about Plasma screens is INCORRECT?\n\n\nThey contain ionized gas that lights up when stimulated by electricity.\nThey don’t work well at high altitudes.\nThey are power efficient.\nThey have a wide range of colors.\n\n\nWhich of the following is NOT a common type of monitor for laptops and desktop computers?\n\n\nLiquid crystal display (LCD)\nLight-emitting-diode (LED)\nOrganic light-emitting-diode (OLED)\nCathode ray tube (CRT)\n\n\nWhich of the following display technologies allows for a perfect representation of blacks? (Select all that applies.)\n\n\nCRT\nPlasma\nLCD\nLCD with LED backlight\nOLED\n\n\nWhich of the following display technologies are most susceptable to sreen burn-in. (Select all that applies.)\n\n\nCRT\nPlasma\nLCD\nLCD with LED backlight\nOLED\n\n\nWhich of the following displays allow for the most vivid images? (Select all that applies.)\n\n\nCRT\nPlasma\nLCD\nLCD with LED backlight\nOLED\n\n\nWhich of the following displays have the best viewing angles?\n\n\nCRT\nPlasma\nLCD\nLCD with LED backlight\nOLED\n\n\nWhich of the following displays allows for infinite contrast?\n\n\nCRT\nPlasma\nLCD\nLCD with LED backlight\nOLED\n\n\n\n\n\n\n\nExpand to see the answers\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\na., b., e.\n\n\n\n\n\nb., e."
  },
  {
    "objectID": "topics/data-representation/introduction-to-binary.html",
    "href": "topics/data-representation/introduction-to-binary.html",
    "title": "Introduction to Binary",
    "section": "",
    "text": "Everyone “knows” that computers use “binary” to operate\nBut, as we saw last class, computers don’t “know” anything ultimately, its CPU is just configured to react in particularly sophisticated ways when its switches (the lightbulbs for the “guy in the box”) are turned on or off.\nSo what is binary anyway? And what does it have to do with computers?\nIn order to understand the Binary numeral system, we can compare it to something we already know: the Decimal numeral system.\nIn decimal , numbers are represented by combinations of ten  different symbols: (0, 1, 2, 3, 4, 5, 6, 7, 8, 9).\nWe call decimal a base 10 numeral system.\n\nIf we have more than “9” of something, another digit is needed (another power of ten):\n\n9 + 1 = 10\n99 + 1 = 100, etc.\n\n\nHow do we represent numbers in binary and how does it compare to binary?\nIn binary , there are only two symbols (0, 1).\nWe call binary a base 2 numeral system.\n\nIf we have more than “1” of something, another bit (power) is needed:\n\n1 + 1 = 10 (in english: one plus one equals two)\n11 + 1 = 100 (in english: three plus one equals four)\n\n\nIt’s counterintuitive at first! But there’s nothing fundamentally different about binary than decimal – we’re just more used to using decimal instead. Since we’re reusing the symbols 1 and 0 from the decimal system, there is a convention to use subscript to disambiguate between different numeral systems:\n\n\n12 + 12 = 102 is the same as 110 + 110 = 210 is the same as one plus one equals two\n112 + 12 = 1002 is the same as 310 + 110 = 410 is the same as three plus one equals four\n\n\nThese subscripts are not always required, but can be very useful when the numeral systems are mixed in the same context.\n\n\n\n\n\n\nNote\n\n\n\nNote: binary and decimal are not the only possible numeral systems. All that distinguishes numeral systems is the number of symbols you agree to use to represent numbers – there are infinite possible numeral systems!\nHexadecimal is another useful numeral system (16 symbols, or base 16) which we will discuss later in the course.",
    "crumbs": [
      "Home",
      "Course Notes",
      "Data representation",
      "Introduction to Binary"
    ]
  },
  {
    "objectID": "topics/data-representation/introduction-to-binary.html#how-are-bits-physically-implemented",
    "href": "topics/data-representation/introduction-to-binary.html#how-are-bits-physically-implemented",
    "title": "Introduction to Binary",
    "section": "How are Bits physically implemented?",
    "text": "How are Bits physically implemented?\nThere are various ways to design circuits that effectively differentiate between “on” and “off” states. One method involves using a transistor, which can either be switched on or off to represent binary information. Another approach uses a capacitor, where its state of being charged or discharged conveys the desired data. In magnetic disks (like HDDs), information is stored as bits based on the direction of the magnetic field, either north-south or south-north. Similarly, on optical discs (such as CD-ROMs), bits are represented by whether a bit on the surface is shiny or not shiny. Lastly, over telephone lines or through radio, binary data is transmitted using high or low-pitched tones to represent the bits. Each of these methods relies on a distinct physical characteristic to represent binary information reliably.\n\n\n\nCapacitors can be charged or uncharged in RAM\n\n\n\n\n\nA transistor is ON or OFF in any chip of the computer such as the CPU and GPU Source: Any PCB",
    "crumbs": [
      "Home",
      "Course Notes",
      "Data representation",
      "Introduction to Binary"
    ]
  },
  {
    "objectID": "topics/data-representation/introduction-to-binary.html#history-of-bytes",
    "href": "topics/data-representation/introduction-to-binary.html#history-of-bytes",
    "title": "Introduction to Binary",
    "section": "History of Bytes 📖",
    "text": "History of Bytes 📖\nA byte represents the number of bits used to encode a single character in a computer, making it the smallest addressable unit of memory in many computer architectures. Historically, the size of a byte was hardware-dependent, with no universal standard governing its size. However, in 1993, a standard was introduced that defined the size of a byte as 8 bits, a convention that is now widely adopted across modern computing systems. This standardization has helped ensure consistency in how data is stored and processed across different platforms and devices.",
    "crumbs": [
      "Home",
      "Course Notes",
      "Data representation",
      "Introduction to Binary"
    ]
  },
  {
    "objectID": "topics/data-representation/introduction-to-binary.html#si-convention",
    "href": "topics/data-representation/introduction-to-binary.html#si-convention",
    "title": "Introduction to Binary",
    "section": "SI Convention 📜",
    "text": "SI Convention 📜\n\n\n\n\n\n\n\n\n\n\nUnit Name\nSymbol\nMultiplying Factor\nMultiplying factor (in thousands)\nDescription in English\n\n\n\n\nByte\nB\n1\n1\nOne byte\n\n\nKilo Byte\nkB\n1000\n1000\nOne thousand bytes\n\n\nMega Byte\nMB\n1000,000\n10002\nOne million byte\n\n\nGiga Byte\nGB\n1000,000,000\n10003\nOne billion byte\n\n\nTera Byte\nTB\n1000,000,000,000\n10004\nOne trillion byte\n\n\nPeta Byte\nPB\n10^15\n10005\nOne quadrillion byte\n\n\nExa Byte\nEB\n10^18\n10006\nOne quintillion byte\n\n\nZetta Byte\nZB\n10^21\n10007\nOne sextillion byte\n\n\nYotta Byte\nYB\n10^24\n10008\nOne septillion byte\n\n\n\nSource: NIST",
    "crumbs": [
      "Home",
      "Course Notes",
      "Data representation",
      "Introduction to Binary"
    ]
  },
  {
    "objectID": "topics/data-representation/introduction-to-binary.html#iec-convention",
    "href": "topics/data-representation/introduction-to-binary.html#iec-convention",
    "title": "Introduction to Binary",
    "section": "IEC Convention 📜",
    "text": "IEC Convention 📜\nTo add to the confusion, Windows and some other operating systems don’t follow the SI conventions. They use symbols like Kb and Mb, but instead of referring to powers of 10, they count bytes in powers of 2. This means that if a manufacturer labels a hard drive using SI conventions, the operating system may display a smaller capacity than advertised.\nIn this course, we will stick to the SI conventions, where 1 Kilobyte equals 1000 bytes, and we will distinguish powers of 2 using the IEC convention. In the late 1990s, the IEC introduced new prefixes to clearly separate capacities based on powers of 10 from those based on powers of 2.\n\n\n\n\n\n\n\n\n\nUnit Name\nSymbol\nMultiplying Factor\nMultiplying factor (in thousands)\n\n\n\n\nKibi Byte\nKib\n1000\n1024\n\n\nDebi Byte\nMib\n1000,000\n10242\n\n\nGibi Byte\nGib\n1000,000,000\n10243\n\n\nTebi Byte\nTib\n1000,000,000,000\n10244\n\n\nPebi Byte\nPib\n10^15\n10245\n\n\ngibi Byte\nEib\n10^18\n10246\n\n\nZebi Byte\nZib\n10^21\n10247\n\n\nYobi Byte\nYib\n10^24\n10248\n\n\n\nhttps://en.wikipedia.org/wiki/Byte#Multiple-byte_units\n\n\n\n\n\n\nNoteQuestion\n\n\n\nJohnny buys a 1Tb external SSD but once plugged into his Windows machine, he notices he only has 931 Gb of available memory space. Can you explain why?",
    "crumbs": [
      "Home",
      "Course Notes",
      "Data representation",
      "Introduction to Binary"
    ]
  },
  {
    "objectID": "topics/data-representation/introduction-to-binary.html#example-convert-25-to-binary.",
    "href": "topics/data-representation/introduction-to-binary.html#example-convert-25-to-binary.",
    "title": "Introduction to Binary",
    "section": "Example Convert 25 to binary.",
    "text": "Example Convert 25 to binary.\nLong Division (divide the Outcome by 2 at every step): \n\n\n\n\n\n\nNote\n\n\n\nOne way of understanding this algorithm is to apply it to the base 10:\n\nThe higher powers are read from bottom to top, because these have been divided repeatedly.",
    "crumbs": [
      "Home",
      "Course Notes",
      "Data representation",
      "Introduction to Binary"
    ]
  },
  {
    "objectID": "topics/data-representation/introduction-to-binary.htm#how-are-bits-physically-implemented",
    "href": "topics/data-representation/introduction-to-binary.htm#how-are-bits-physically-implemented",
    "title": "Introduction to Binary",
    "section": "How are Bits physically implemented?",
    "text": "How are Bits physically implemented?\nThere are various ways to design circuits that effectively differentiate between “on” and “off” states. One method involves using a transistor, which can either be switched on or off to represent binary information. Another approach uses a capacitor, where its state of being charged or discharged conveys the desired data. In magnetic disks (like HDDs), information is stored as bits based on the direction of the magnetic field, either north-south or south-north. Similarly, on optical discs (such as CD-ROMs), bits are represented by whether a bit on the surface is shiny or not shiny. Lastly, over telephone lines or through radio, binary data is transmitted using high or low-pitched tones to represent the bits. Each of these methods relies on a distinct physical characteristic to represent binary information reliably.\n\n\n\nCapacitors can be charged or uncharged in RAM\n\n\n\n\n\nA transistor is ON or OFF in any chip of the computer such as the CPU and GPU Source: Any PCB"
  },
  {
    "objectID": "topics/data-representation/introduction-to-binary.htm#history-of-bytes",
    "href": "topics/data-representation/introduction-to-binary.htm#history-of-bytes",
    "title": "Introduction to Binary",
    "section": "History of Bytes 📖",
    "text": "History of Bytes 📖\nA byte represents the number of bits used to encode a single character in a computer, making it the smallest addressable unit of memory in many computer architectures. Historically, the size of a byte was hardware-dependent, with no universal standard governing its size. However, in 1993, a standard was introduced that defined the size of a byte as 8 bits, a convention that is now widely adopted across modern computing systems. This standardization has helped ensure consistency in how data is stored and processed across different platforms and devices."
  },
  {
    "objectID": "topics/data-representation/introduction-to-binary.htm#si-convention",
    "href": "topics/data-representation/introduction-to-binary.htm#si-convention",
    "title": "Introduction to Binary",
    "section": "SI Convention 📜",
    "text": "SI Convention 📜\n\n\n\n\n\n\n\n\n\n\nUnit Name\nSymbol\nMultiplying Factor\nMultiplying factor (in thousands)\nDescription in English\n\n\n\n\nByte\nB\n1\n1\nOne byte\n\n\nKilo Byte\nkB\n1000\n1000\nOne thousand bytes\n\n\nMega Byte\nMB\n1000,000\n10002\nOne million byte\n\n\nGiga Byte\nGB\n1000,000,000\n10003\nOne billion byte\n\n\nTera Byte\nTB\n1000,000,000,000\n10004\nOne trillion byte\n\n\nPeta Byte\nPB\n10^15\n10005\nOne quadrillion byte\n\n\nExa Byte\nEB\n10^18\n10006\nOne quintillion byte\n\n\nZetta Byte\nZB\n10^21\n10007\nOne sextillion byte\n\n\nYotta Byte\nYB\n10^24\n10008\nOne septillion byte\n\n\n\nSource: NIST"
  },
  {
    "objectID": "topics/data-representation/introduction-to-binary.htm#iec-convention",
    "href": "topics/data-representation/introduction-to-binary.htm#iec-convention",
    "title": "Introduction to Binary",
    "section": "IEC Convention 📜",
    "text": "IEC Convention 📜\nTo add to the confusion, Windows and some other operating systems don’t follow the SI conventions. They use symbols like Kb and Mb, but instead of referring to powers of 10, they count bytes in powers of 2. This means that if a manufacturer labels a hard drive using SI conventions, the operating system may display a smaller capacity than advertised.\nIn this course, we will stick to the SI conventions, where 1 Kilobyte equals 1000 bytes, and we will distinguish powers of 2 using the IEC convention. In the late 1990s, the IEC introduced new prefixes to clearly separate capacities based on powers of 10 from those based on powers of 2.\n\n\n\n\n\n\n\n\n\nUnit Name\nSymbol\nMultiplying Factor\nMultiplying factor (in thousands)\n\n\n\n\nKibi Byte\nKib\n1000\n1024\n\n\nDebi Byte\nMib\n1000,000\n10242\n\n\nGibi Byte\nGib\n1000,000,000\n10243\n\n\nTebi Byte\nTib\n1000,000,000,000\n10244\n\n\nPebi Byte\nPib\n10^15\n10245\n\n\ngibi Byte\nEib\n10^18\n10246\n\n\nZebi Byte\nZib\n10^21\n10247\n\n\nYobi Byte\nYib\n10^24\n10248\n\n\n\nhttps://en.wikipedia.org/wiki/Byte#Multiple-byte_units\n\n\n\n\n\n\nQuestion\n\n\nJohnny buys a 1Tb external SSD but once plugged into his Windows machine, he notices he only has 931 Gb of available memory space. Can you explain why?"
  },
  {
    "objectID": "topics/data-representation/introduction-to-binary.htm#example-convert-25-to-binary.",
    "href": "topics/data-representation/introduction-to-binary.htm#example-convert-25-to-binary.",
    "title": "Introduction to Binary",
    "section": "Example Convert 25 to binary.",
    "text": "Example Convert 25 to binary.\nLong Division (divide the Outcome by 2 at every step): \n\n\n\n\n\n\nNote\n\n\nOne way of understanding this algorithm is to apply it to the base 10:\n\nThe higher powers are read from bottom to top, because these have been divided repeatedly."
  },
  {
    "objectID": "topics/data-representation/index.html",
    "href": "topics/data-representation/index.html",
    "title": "Data Representation",
    "section": "",
    "text": "Order By\n      Default\n      \n        Date - Oldest\n      \n      \n        Date - Newest\n      \n      \n        Title\n      \n    \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nIntroduction to Binary\n\n\nWhat’s a bit, and how is it implemented in a computer?\n\n\n\n\n\n\n\n\n2025-09-15\n\n\n\n\n\n\n\n\n\n\n\n\nBinary Math\n\n\nHow are computers performing additions and subtractions.\n\n\n\n\n\n\n\n\n2025-09-15\n\n\n\n\n\n\n\n\n\n\n\n\nLogic Gates and Boolean Algebra\n\n\nIntroduction to AND, OR, NOT, XOR gates.\n\n\n\n\n\n\n\n\n2025-09-22\n\n\n\n\n\nNo matching items\n Back to topReuseCC BY-NC-SA 4.0"
  },
  {
    "objectID": "topics/data-representation/logic-gates-and-boolean-algebra.html",
    "href": "topics/data-representation/logic-gates-and-boolean-algebra.html",
    "title": "Logic Gates and Boolean Algebra",
    "section": "",
    "text": "In 1946, the world’s first programmable electronic computer was created: the ENIAC (Electronic Numerical Integrator and Computer). It was a massive machine, filling an entire room with thousands of vacuum tubes, and yet it laid the foundation for every modern computer we use today.\nThe ENIAC was programmed by a pioneering group of women, including Betty Jean Jennings and Fran Bilas, at the School of Electrical Engineering. During World War II, these women developed an expertise in programming and operating the machine. Their skills became so valuable that they were difficult to replace, even when soldiers returned from the war.\nThe ENIAC used vacuum tubes as switches to amplify or switch off the electricity in order to store bits, flip bits, and perform Boolean operations. This allowed the ENIAC to perform basic math and help with calculations.\nLogic gates are the fundamental building blocks of digital circuits. They take simple inputs (like 0s and 1s) and combine them using basic rules (AND, OR, NOT, XOR) to produce outputs. From these simple operations, computers can add numbers, compare values, store information, and eventually run complex software.\nBy studying logic gates, we connect the concepts seen in binary to electronic hardware.\n\n\n\n\n\n\nNoteThe ENIAC Programmers\n\n\n\n\nIn the early days of computing, there was a job called being a computer, where women, mostly women, some men, would calculate and compute. During World War II, there was a large need for mathematical solutions (…)\n\nMegan Smith, U.S. Chief of Technology\n\n\n::: {layout-ncol=2}",
    "crumbs": [
      "Home",
      "Course Notes",
      "Data representation",
      "Logic Gates and Boolean Algebra"
    ]
  },
  {
    "objectID": "topics/data-representation/logic-gates-and-boolean-algebra.html#transistors",
    "href": "topics/data-representation/logic-gates-and-boolean-algebra.html#transistors",
    "title": "Logic Gates and Boolean Algebra",
    "section": "Transistors",
    "text": "Transistors\nA transistor is like a tiny switch made from a semiconductor and three parts called the base, emitter, and collector. By controlling the base, we can turn the flow of current on or off—just like flipping a light switch. What makes transistors powerful is that they can switch on and off millions of times per second. When we connect many transistors together (with other components) to make electronic circuits, they form logic gates. The four basic gates you should know:\n\nOR\nAND\nNOT\nXOR : Exclusive OR\n\nYou will use those operations frequently in programming! So make sure to pay attention to this part!\nWhen combining these gates (AND, OR, XOR, NOT), computers can make “decisions”, and perform mathematical operations like addition or more complex tasks such as multiplexing.\n\n\n\nTransistor details\n\n\nEach logic gate will take one or more bits as input and return an output. To describe the behaviour of each we will look at their truth table, which list all the possible outcomes of this gate.\nLet’s first understanding them from a conceptual level using simple “True” (1) or “False” (0) statements and watch the output of each gate.",
    "crumbs": [
      "Home",
      "Course Notes",
      "Data representation",
      "Logic Gates and Boolean Algebra"
    ]
  },
  {
    "objectID": "topics/data-representation/logic-gates-and-boolean-algebra.htm#transistors",
    "href": "topics/data-representation/logic-gates-and-boolean-algebra.htm#transistors",
    "title": "Logic Gates and Boolean Algebra",
    "section": "Transistors",
    "text": "Transistors\nA transistor is like a tiny switch made from a semiconductor and three parts called the base, emitter, and collector. By controlling the base, we can turn the flow of current on or off—just like flipping a light switch. What makes transistors powerful is that they can switch on and off millions of times per second. When we connect many transistors together (with other components) to make electronic circuits, they form logic gates. The four basic gates you should know:\n\nOR\nAND\nNOT\nXOR : Exclusive OR\n\nYou will use those operations frequently in programming! So make sure to pay attention to this part!\nWhen combining these gates (AND, OR, XOR, NOT), computers can make “decisions”, and perform mathematical operations like addition or more complex tasks such as multiplexing.\n\nTransistor detailsEach logic gate will take one or more bits as input and return an output. To describe the behaviour of each we will look at their truth table, which list all the possible outcomes of this gate.\nLet’s first understanding them from a conceptual level using simple “True” (1) or “False” (0) statements and watch the output of each gate."
  },
  {
    "objectID": "topics/index.html",
    "href": "topics/index.html",
    "title": "Topics",
    "section": "",
    "text": "Data Representation\n\n\nAll lectures related to logic & data representation can be found here.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHardware\n\n\nAll lectures related to computer hardware can be found here.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOperating Systems\n\n\nAll lectures related to operating systems can be found here.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTechnical Support\n\n\nAll lectures related to technical support can be found here.\n\n\n\n\n\n\n\n\nNo matching items\n Back to topReuseCC BY-NC-SA 4.0"
  },
  {
    "objectID": "topics/operating-systems/index.html",
    "href": "topics/operating-systems/index.html",
    "title": "Operating Systems",
    "section": "",
    "text": "No matching items\n Back to topReuseCC BY-NC-SA 4.0"
  },
  {
    "objectID": "topics/all-lectures.html",
    "href": "topics/all-lectures.html",
    "title": "All lectures",
    "section": "",
    "text": "Order By\n      Default\n      \n        Date - Oldest\n      \n      \n        Date - Newest\n      \n      \n        Title\n      \n    \n  \n    \n      \n      \n    \n\n\n\n\n\n\nDate\n\n\n\nTitle\n\n\n\nSubtitle\n\n\n\n\n\n\n\n\n2025-08-20\n\n\nIntroduction to Computers\n\n\nThe fundamental properties of computers explained with examples and definitions.\n\n\n\n\n\n\n2025-08-25\n\n\nExternal components\n\n\nOverview of many external components, or peripheral devices, used by and for computers. Input devices, Output devices, and connectors\n\n\n\n\n\n\n2025-09-02\n\n\nInternal Components\n\n\nExplains the most important internal components of desktop computers. Processing, memory, storage, and communication.\n\n\n\n\n\n\n2025-09-08\n\n\nUnderstanding CPUs\n\n\nMore detail on CPUs. “Guy in Box” analogy, Clock Speed, Codebook, Databuses explained.\n\n\n\n\n\n\n2025-09-15\n\n\nIntroduction to Binary\n\n\nWhat’s a bit, and how is it implemented in a computer?\n\n\n\n\n\n\n2025-09-15\n\n\nBinary Math\n\n\nHow are computers performing additions and subtractions.\n\n\n\n\n\n\n2025-09-22\n\n\nLogic Gates and Boolean Algebra\n\n\nIntroduction to AND, OR, NOT, XOR gates.\n\n\n\n\n\n\nNo matching items\n Back to topReuseCC BY-NC-SA 4.0"
  },
  {
    "objectID": "topics/data-representation/binary-math.htm#negative-numbers",
    "href": "topics/data-representation/binary-math.htm#negative-numbers",
    "title": "Binary Math",
    "section": "Negative numbers 🌡️",
    "text": "Negative numbers 🌡️\nNot all numbers in real life are positive, just think of freezing winter temperatures in Canada 🥶 or when bank accounts slip below zero ☹️💸. Because of this, computers must be able to represent not only positive values but also negative ones. In binary, special methods are used to handle negative numbers so that calculations remain accurate and efficient.\nHow can be achieve this with a binary system?\nThe simple answer is to use the first bit of a number to represent the sign and use the remaining bits for the magnitude of the number:\n\n1 for negative ➖\n0 for positive ➕\n\nUnsigned versus Signed 🖊️\nUp to now, we’ve only looked at positive binary numbers, where all the bits are used to represent the value. For signed numbers, however, one bit is set aside to indicate the sign (positive or negative). This reduces the range of values that can be represented.\n\n\n\nExample:\n\n\nFor example, with 4 bits we can represent the unsigned numbers: 0 to 15, while with the same number of bits we can represent signed numbers -7 to +7.\n\n\n\n\nWith this simple approach however, zero ends up having two representations (positive zero and negative zero), and basic operations are not working as expected, for example: \\[\n5_{10} + −5_{10} = 0101_{2} + 1101_{2} = 0010_{2} \\not = 0_{10}  ❌\n\\]\n\\[\n6_{10} + (-2)_{10} =  0110_{2} + 1010_{2} = 0000_{2} \\not = 4_{10} ❌\n\\]\nHere are the binary values from -7 to +7:\n\n\n\nBinary\nDecimal Value\n\n\n\n\n1 1 1 1\n-7\n\n\n1 1 1 0\n-6\n\n\n1 1 0 1\n-5\n\n\n1 1 0 0\n-4\n\n\n1 0 1 1\n-3\n\n\n1 0 1 0\n-2\n\n\n1 0 0 1\n-1\n\n\n1 0 0 0\n-0 ❓ Negative zero??\n\n\n0 0 0 0\n0 ⚠️ Zero appears twice!\n\n\n0 0 0 1\n1\n\n\n0 0 1 0\n2\n\n\n0 0 1 1\n3\n\n\n0 1 0 0\n4\n\n\n0 1 0 1\n5\n\n\n0 1 1 0\n6\n\n\n0 1 1 1\n7"
  },
  {
    "objectID": "topics/data-representation/binary-math.htm#twos-complement",
    "href": "topics/data-representation/binary-math.htm#twos-complement",
    "title": "Binary Math",
    "section": "Two’s complement",
    "text": "Two’s complement\nTwo’s complement is the most common way to represent signed numbers in computers. It’s based on mathematical thoeries and help fix the issues seen above with the “simple approach”."
  },
  {
    "objectID": "topics/data-representation/binary-math.html",
    "href": "topics/data-representation/binary-math.html",
    "title": "Binary Math",
    "section": "",
    "text": "In binary, there are only two symbols (0, 1). We call binary a base-2 numeral system.\nSo if we have more than 1 of something, another bit is needed:\n\n1 + 1 = 10 (in English: one plus one equals two)\n\n11 + 1 = 100 (in English: three plus one equals four)\n\nIt may feel counterintuitive at first 🤯, but there’s nothing fundamentally different about binary compared to decimal, we’re just more used to working in decimal.\nJust like in decimal addition, when a column reaches its maximum digit (9), we carry over a 1 to the next column (the next power of 10). In binary, the idea is the same, but the largest digit is only 1. So whenever we get 1 + 1 in the same column, we carry over to the next place value (the next power of 2).\n\n\n\n\n\n\n\n\n\n\nInside the CPU, special circuits called adder gates handle this process automatically. The sum is the result that stays in the current column, while the carry (C) is the extra 1 that “spills over” into the next column (the next power of 2).\n\n\n\nHalf-Adder gate 1➕1 Adds two single binary digits.\n\n\n\n\n\nFull-Adder 1➕1➕1: Adds two binary digits and includes the carry from a previous addition."
  },
  {
    "objectID": "topics/data-representation/binary-math.html#negative-numbers",
    "href": "topics/data-representation/binary-math.html#negative-numbers",
    "title": "Binary Math",
    "section": "Negative numbers 🌡️",
    "text": "Negative numbers 🌡️\nNot all numbers in real life are positive, just think of freezing winter temperatures in Canada 🥶 or when bank accounts slip below zero ☹️💸. Because of this, computers must be able to represent not only positive values but also negative ones. In binary, special methods are used to handle negative numbers so that calculations remain accurate and efficient.\nHow can be achieve this with a binary system?\nThe simple answer is to use the first bit of a number to represent the sign and use the remaining bits for the magnitude of the number:\n\n1 for negative ➖\n0 for positive ➕\n\n\nUnsigned versus Signed 🖊️\nUp to now, we’ve only looked at positive binary numbers, where all the bits are used to represent the value. For signed numbers, however, one bit is set aside to indicate the sign (positive or negative). This reduces the range of values that can be represented.\n\n\n\n\n\n\nNoteExample:\n\n\n\nFor example, with 4 bits we can represent the unsigned numbers: 0 to 15, while with the same number of bits we can represent signed numbers -7 to +7.\n\n\n\nWith this simple approach however, zero ends up having two representations (positive zero and negative zero), and basic operations are not working as expected, for example: \\[\n5_{10} + −5_{10} = 0101_{2} + 1101_{2} = 0010_{2} \\not = 0_{10}  ❌\n\\]\n\\[\n6_{10} + (-2)_{10} =  0110_{2} + 1010_{2} = 0000_{2} \\not = 4_{10} ❌\n\\]\nHere are the binary values from -7 to +7:\n\n\n\nBinary\nDecimal Value\n\n\n\n\n1 1 1 1\n-7\n\n\n1 1 1 0\n-6\n\n\n1 1 0 1\n-5\n\n\n1 1 0 0\n-4\n\n\n1 0 1 1\n-3\n\n\n1 0 1 0\n-2\n\n\n1 0 0 1\n-1\n\n\n1 0 0 0\n-0 ❓ Negative zero??\n\n\n0 0 0 0\n0 ⚠️ Zero appears twice!\n\n\n0 0 0 1\n1\n\n\n0 0 1 0\n2\n\n\n0 0 1 1\n3\n\n\n0 1 0 0\n4\n\n\n0 1 0 1\n5\n\n\n0 1 1 0\n6\n\n\n0 1 1 1\n7"
  },
  {
    "objectID": "topics/data-representation/binary-math.html#twos-complement",
    "href": "topics/data-representation/binary-math.html#twos-complement",
    "title": "Binary Math",
    "section": "Two’s complement",
    "text": "Two’s complement\nTwo’s complement is the most common way to represent signed numbers in computers. It’s based on mathematical thoeries and help fix the issues seen above with the “simple approach”.\n\nExample: Representing a negative number using Two’s Complement\n\n✍️ Write the positive version of the number using all the bits available (including one bit for the sign)\n\nExample: (5)10 = (0000 0101)2\n\n🔄 Invert all the bits (flip 0 → 1 and 1 → 0).\n\n0000 0101 → 1111 1010\nThis is also called One’s complement.\n\n➕1 Add 1 to the inverted value.\n\n1111 1010 + 1 = 1111 1011\n\n\n✅ Therefore, (-5)10 = (1111 1011)*2 ​\nHere are the binary representation of numbers from -7 to +7 in two’s complement:\n\n\n\nBinary\nDecimal Value\n\n\n\n\n1 0 0 0\n-8\n\n\n1 0 0 1\n-7\n\n\n1 0 1 0\n-6\n\n\n1 0 1 1\n-5\n\n\n1 1 0 0\n-4\n\n\n1 1 0 1\n-3\n\n\n1 1 1 0\n-2\n\n\n1 1 1 1\n-1\n\n\n0 0 0 0\n0\n\n\n0 0 0 1\n1\n\n\n0 0 1 0\n2\n\n\n0 0 1 1\n3\n\n\n0 1 0 0\n4\n\n\n0 1 0 1\n5\n\n\n0 1 1 0\n6\n\n\n0 1 1 1\n7\n\n\n\n\n\n\n\n\n\nNoteExample: Representing (-20)10 in Two’s Complement\n\n\n\n✍️ Step 1: How many bits do we need?\n👉 Rule of thumb: if the leftmost bit is 1, add an extra bit!\n(because negative numbers should always start with 1 , and positive numbers with 0)\n\\[(20)_{10} = (10100)_{2} \\;\\; \\rightarrow \\;\\; (010100)_{2}\\]\n\n🔄 Step 2: Invert all the bits\n\\[\n010100 \\;\\; \\rightarrow \\;\\; 101011\n\\]\n\n➕1 Step 3: Add 1 to the inverted value\n\\[\n101011 + 1 = 101100\n\\]\n\n✅ Final Answer:\n\\[\n(-20)_{10} = (101100)_{2}\n\\]\n\n\n\nMath operations in Two’s complement\nNow let’s observe why Two’s complement fixes the simple operations we had earlier:\n🧮 Example 1: \\[\n5_{10} + -5_{10} =  0101_{2} + 1011_{2} = 0000_{2} = 0_{10} ✅\n\\]\n🧮 Example 2: \\[\n6_{10} + -2_{10} =  0110_{2} + 1110_{2} = 0100_{2} = 4_{10} ✅\n\\] 🔄 The overflow that happens with fixed bits ensures that we “wrap around” back to 0 when adding a positive and its negative counterpart.\n💡 Key Advantage:\nUsing Two’s Complement makes math operations simpler for computers ⚡. Both signed and unsigned numbers can be added using the same adder circuits 🔌.\n👉 For example:\n- 4 + 2 (unsigned)\n- 4 + (-2) (signed)\nBoth are handled using the same hardware adder gate ➕."
  },
  {
    "objectID": "topics/hardware/index.html",
    "href": "topics/hardware/index.html",
    "title": "Hardware",
    "section": "",
    "text": "Order By\n      Default\n      \n        Date - Oldest\n      \n      \n        Date - Newest\n      \n      \n        Title\n      \n    \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nIntroduction to Computers\n\n\nThe fundamental properties of computers explained with examples and definitions.\n\n\n\n\n\n\n\n\n2025-08-20\n\n\n\n\n\n\n\n\n\n\n\n\nExternal components\n\n\nOverview of many external components, or peripheral devices, used by and for computers. Input devices, Output devices, and connectors\n\n\n\n\n\n\n\n\n2025-08-25\n\n\n\n\n\n\n\n\n\n\n\n\nInternal Components\n\n\nExplains the most important internal components of desktop computers. Processing, memory, storage, and communication.\n\n\n\n\n\n\n\n\n2025-09-02\n\n\n\n\n\n\n\n\n\n\n\n\nUnderstanding CPUs\n\n\nMore detail on CPUs. “Guy in Box” analogy, Clock Speed, Codebook, Databuses explained.\n\n\n\n\n\n\n\n\n2025-09-08\n\n\n\n\n\nNo matching items\n Back to topReuseCC BY-NC-SA 4.0"
  },
  {
    "objectID": "topics/hardware/understanding-cpus.htm#introduction",
    "href": "topics/hardware/understanding-cpus.htm#introduction",
    "title": "Understanding CPUs",
    "section": "Introduction",
    "text": "Introduction\nLast week one component we learned was the CPU (Central Processing Unit): A complex collection of electronic circuits on one or more integrated circuits (chips).\nWe learned that the CPU is responsible for:\n\nExecuting the instructions in a software program.\nCommunicating with other parts of the computer system\n\nToday we’re going to take a deep dive into how the CPU carries out those responsibilities."
  },
  {
    "objectID": "topics/hardware/understanding-cpus.htm#lesson-overview",
    "href": "topics/hardware/understanding-cpus.htm#lesson-overview",
    "title": "Understanding CPUs",
    "section": "Lesson Overview",
    "text": "Lesson Overview\nMore detail on CPUs. “Guy in Box” analogy, Clock Speed, Codebook, data buses explained."
  },
  {
    "objectID": "topics/hardware/understanding-cpus.htm#cpu-analogy-guy-in-a-box",
    "href": "topics/hardware/understanding-cpus.htm#cpu-analogy-guy-in-a-box",
    "title": "Understanding CPUs",
    "section": "CPU Analogy: Guy in a Box 📦",
    "text": "CPU Analogy: Guy in a Box 📦\nLet’s start with an analogy: CPUs are a “Guy-in-a-box”. This guy:\n\ncan perform any mathematical function quickly.\nlives in a closed-up box so direct communication is impossible.\n\nOur only way of communicating with this guy is via the External Data Bus. This is 16 light bulbs: 8 visible inside the box, and 8 visible outside the box. There is a light switch for each pair (inside-outside) the box which allows us to flip both the inside and outside bulbs and hence send binary messages!\n\nA man in a box analogy. Image source: unknown."
  },
  {
    "objectID": "topics/hardware/understanding-cpus.htm#pipelining",
    "href": "topics/hardware/understanding-cpus.htm#pipelining",
    "title": "Understanding CPUs",
    "section": "Pipelining 🚥",
    "text": "Pipelining 🚥\n\nAlmost all CPU instructions feature a set of 4 stages:\nFetch : retrieve the instruction, address, and data, write them to registers\nDecode : search for instruction code in codebook, verify it is a real instruction, and that data/address are valid\nExecute : perform the instruction, update registers with results\nWrite: write to databus to share results\nRather than have each instruction repeat all of these steps, we can organize CPUs further by specializing our “guy in a box” for each stage\nThis is called pipelining , and it allows for greater efficiency in CPU programming\n\n\nAnalogy of multiple men in a box to illustrate the idea of a pipeline."
  },
  {
    "objectID": "topics/hardware/understanding-cpus.htm#cpu-properties",
    "href": "topics/hardware/understanding-cpus.htm#cpu-properties",
    "title": "Understanding CPUs",
    "section": "CPU Properties 📊",
    "text": "CPU Properties 📊\nThe most important properties that define CPU behavior are speed and bus width: that is, how fast the clock cycle repeats, and how much data per clock cycle the CPU can process.\nClock Speed\nWe measure CPU speed : in cycles per second, e.g. megahertz (MHz) or gigahertz (GHz).\n\n\n\n\n\n\nUnit of Measurement\n\n\nHertz, usually written as Hz, denote frequency. 1Hz is “one time per second”, 10Hz is “ten times per second”. We can use SI Prefixes (International System of Unit Prefixes) to compare magnitudes easily.\nYou will see many of these in computer science over and over again – get to know them well!\n\nSI Prefixes for Frequencies\n\n\n\n\n\n\n\n\nUnit\nMeaning\nDefinition\nExamples\n\n\n\n\nHz\nOnce per second\n1/s, or 1Hz\n1-2Hz: human heart-rate at rest (1Hz = 60 beats per minute, 2Hz = 120 bpm)24Hz: framerate of historic cinema20-60Hz: frequency range for bass notes (C0 = 16.35Hz to C2 = 65.4Hz)60-144Hz: framerate of most monitors\n\n\nkHz\nThousand times per second\n1000 Hz\n0.1-2kHz: frequency range for midrange notes (A2=0.110kHz, C7=2kHz)20kHz: maximum frequency audible to human ear740 kHz: Intel 4004 processor clock speed (1971)\n\n\nMHz\nMillion times per second\n1000000 Hz\n8MHz: fastest CPU clock speed in the 70s35MHz: fastest CPU clock speed in the 80s500-1000MHz: fastest CPU clock speed in the 90s)\n\n\nGHz\nBillion times per second\n1000000000 Hz\n2-5GHz: Almost all consumer CPUs in 2024 have base clock speeds in this range9.117 GHz: fastest CPU clock speed ever recorded (2024)\n\n\n\n\n\n\nCPU Cores\nA multi-core SPU means that more than one CPU core is integrated into a single chip, each capable of running parallel processes. This means, in theory, that we multiply the amount of information that can be processes, send and recieved from/to the RAM.\nBenefits of Multi-core processors: - Enhancing the multitasking: multiple jobs done at the same time. - Improved performance: Faster and smoother performance. - Energy efficiency: More work can be done with less power.\nCPU Threads\nCPU cores and threads are closely related but not the same. A core is a physical unit within the CPU that executes instructions, while a thread is a virtual sequence of instructions assigned to a core. Think of cores as workers and threads as the jobs they carry out.\n&gt; When CPU has 16 threads, it simply means it can run 16 threads simultaneously.\nBus width\nThe amount of data processed at a time depends on the “number of lightbulbs” or the width of the data bus\nBus width is measured in bits, e.g. 8-bits, 16-bit, 32-bit, 64-bit, etc.\n\n\n\nQuestion\n\n\nHow many bits do you need in bus width to represent the Guy in the Box and their codebook from the previous problems?"
  },
  {
    "objectID": "topics/hardware/understanding-cpus.html",
    "href": "topics/hardware/understanding-cpus.html",
    "title": "Understanding CPUs",
    "section": "",
    "text": "What if all computers contained some guy, trapped in a box? Something to consider. Image source: unknown",
    "crumbs": [
      "Home",
      "Course Notes",
      "Hardware",
      "Understanding CPUs"
    ]
  },
  {
    "objectID": "topics/hardware/understanding-cpus.html#introduction",
    "href": "topics/hardware/understanding-cpus.html#introduction",
    "title": "Understanding CPUs",
    "section": "Introduction",
    "text": "Introduction\nLast week one component we learned was the CPU (Central Processing Unit): A complex collection of electronic circuits on one or more integrated circuits (chips).\nWe learned that the CPU is responsible for:\n\nExecuting the instructions in a software program.\nCommunicating with other parts of the computer system\n\nToday we’re going to take a deep dive into how the CPU carries out those responsibilities.",
    "crumbs": [
      "Home",
      "Course Notes",
      "Hardware",
      "Understanding CPUs"
    ]
  },
  {
    "objectID": "topics/hardware/understanding-cpus.html#lesson-overview",
    "href": "topics/hardware/understanding-cpus.html#lesson-overview",
    "title": "Understanding CPUs",
    "section": "Lesson Overview",
    "text": "Lesson Overview\nMore detail on CPUs. “Guy in Box” analogy, Clock Speed, Codebook, data buses explained.",
    "crumbs": [
      "Home",
      "Course Notes",
      "Hardware",
      "Understanding CPUs"
    ]
  },
  {
    "objectID": "topics/hardware/understanding-cpus.html#cpu-analogy-guy-in-a-box",
    "href": "topics/hardware/understanding-cpus.html#cpu-analogy-guy-in-a-box",
    "title": "Understanding CPUs",
    "section": "CPU Analogy: Guy in a Box 📦",
    "text": "CPU Analogy: Guy in a Box 📦\nLet’s start with an analogy: CPUs are a “Guy-in-a-box”. This guy:\n\ncan perform any mathematical function quickly.\nlives in a closed-up box so direct communication is impossible.\n\nOur only way of communicating with this guy is via the External Data Bus. This is 16 light bulbs: 8 visible inside the box, and 8 visible outside the box. There is a light switch for each pair (inside-outside) the box which allows us to flip both the inside and outside bulbs and hence send binary messages!\n\n\n\nA man in a box analogy. Image source: unknown.\n\n\n\n\n\n\n\n\nA sample caption. Image source: unknown.\n\n\n\nData bus 💡💡💡\nIn this analogy this arrangement of light bulbs is called a data bus: a method for transporting data from one component to another using electrical circuits. These “light bulbs”: - can be controlled (turned on or off) by us and by the guy-in-the-box - are synchronized (bulb 1 for us has the same value as bulb 1 for the guy) - we can share messages by setting the light bulbs on off, as long as we: agree on schedule (not changing the lightbulbs at the same time) - the meaning (share the same interpretation of lightbulb being on/off)\n\n\n\nCodebook: Agreeing on meaning 📖\nHow do we share the same meaning?\nIt’s important to have common definitions for the meaning of the lightbulbs being on/off to understand messages sent by this method CPUs are designed with a codebook (instruction set) that defines the commands that we can give to the guy in the box. This codebook is built into each CPU by its manufacturer and is called “machine code”.\n\n\n\nEvery pair of light bulbs is matching and can be controlled from the inside by the CPU or from the outside by the program executing instructions on the CPU.\n\n\n\n\n\n\n\n\nNote\n\n\n\nIf CPUs only understand machine code (sequence of 1 or 0), how can this C# code be understood by it?\nConsole.WriteLine(\"Hello World!\"); \n\n\n\n\n\nRegisters\nSo far, we can send/receive “messages” from the light bulbs. But, in order to “remember” a message, the guy needs at least a few workstations ( registers ) to copy our messages, otherwise the messages will be lost every time the data bus updates.\n\nRegisters are places to store a very small amount of data temporarily\nRegisters are usually the around the 1-4x the size of the data bus\nWe can give the registers names to distinguish them (AX, BX, CX, DX for example)\n\n\n\n\nAnalogy of the registers acting as workstations. Image source: unknown.\n\n\n\n\n\n\n\n\nNote\n\n\n\nAre CPU registers made of the same technology as RAM?\n\n\n\n\n\nClock: Agreeing on schedule ⏰\nNow we are ready to communicate with the guy in the box. We can send them the first command by lighting up the bulbs on the data bus.\nBut how do they know when we have finished setting up the light bulbs?\n\n\n\nClock analogy. Image source: unknown.\n\n\n\nWe can use a bell activated by a button.\nA real computer uses a special wire called the clock wire (CLK). The CLK wire is turned on and off on a precise and regular schedule. This is called a clock cycle.\nEach time the clock turns on, the state of our lightbulbs is shared with the guy in the box\nThe guy then has until the clock turns off to send a message back\nThe next time the clock turns on, a new message is sent to the CPU\nThe time between each clock cycle is the speed that a CPU can perform a given task\nThe maximum number of clock cycles a CPU can handle in given period of time is called the clock speed.\n\n\n\n\n\n\n\n:::{.callout-tip}\n\n\n# Sample Guy in a Box Problem\n\n\nUsing the following codebook, ask the “Guy in a box” to calculate 2+3\n\n\nYou must send a series of commandsto the CPU. The CPU will act on each command and give you an answer.\n\n\nYour answer should be a sequence of numbers you could send to the guy in the box to get the right answer.\n\n\n\n\n\n\n\nSolution\n10000000  The next line is a number, put it in AX\n00000010  The number 2\n10010000  The next line is a number, put it in BX\n00000011  The number 3\n10110000  Add AX to BX and put the result in AX\n11000000  Place the value of AX on the external data bus\nA set of commands such as this is called a program. A program is a series of command sent to a CPU in a specific order for the CPU to perform work.\n:::",
    "crumbs": [
      "Home",
      "Course Notes",
      "Hardware",
      "Understanding CPUs"
    ]
  },
  {
    "objectID": "topics/hardware/understanding-cpus.html#pipelining",
    "href": "topics/hardware/understanding-cpus.html#pipelining",
    "title": "Understanding CPUs",
    "section": "Pipelining 🚥",
    "text": "Pipelining 🚥\n\nAlmost all CPU instructions feature a set of 4 stages:\nFetch : retrieve the instruction, address, and data, write them to registers\nDecode : search for instruction code in codebook, verify it is a real instruction, and that data/address are valid\nExecute : perform the instruction, update registers with results\nWrite: write to databus to share results\nRather than have each instruction repeat all of these steps, we can organize CPUs further by specializing our “guy in a box” for each stage\nThis is called pipelining , and it allows for greater efficiency in CPU programming\n\n\n\n\nAnalogy of multiple men in a box to illustrate the idea of a pipeline.",
    "crumbs": [
      "Home",
      "Course Notes",
      "Hardware",
      "Understanding CPUs"
    ]
  },
  {
    "objectID": "topics/hardware/understanding-cpus.html#cpu-properties",
    "href": "topics/hardware/understanding-cpus.html#cpu-properties",
    "title": "Understanding CPUs",
    "section": "CPU Properties 📊",
    "text": "CPU Properties 📊\nThe most important properties that define CPU behavior are speed and bus width: that is, how fast the clock cycle repeats, and how much data per clock cycle the CPU can process.\n\nClock Speed\nWe measure CPU speed : in cycles per second, e.g. megahertz (MHz) or gigahertz (GHz).\n\n\n\n\n\n\nNoteUnit of Measurement\n\n\n\nHertz, usually written as Hz, denote frequency. 1Hz is “one time per second”, 10Hz is “ten times per second”. We can use SI Prefixes (International System of Unit Prefixes) to compare magnitudes easily.\nYou will see many of these in computer science over and over again – get to know them well!\n\nSI Prefixes for Frequencies\n\n\n\n\n\n\n\n\nUnit\nMeaning\nDefinition\nExamples\n\n\n\n\nHz\nOnce per second\n1/s, or 1Hz\n1-2Hz: human heart-rate at rest (1Hz = 60 beats per minute, 2Hz = 120 bpm)24Hz: framerate of historic cinema20-60Hz: frequency range for bass notes (C0 = 16.35Hz to C2 = 65.4Hz)60-144Hz: framerate of most monitors\n\n\nkHz\nThousand times per second\n1000 Hz\n0.1-2kHz: frequency range for midrange notes (A2=0.110kHz, C7=2kHz)20kHz: maximum frequency audible to human ear740 kHz: Intel 4004 processor clock speed (1971)\n\n\nMHz\nMillion times per second\n1000000 Hz\n8MHz: fastest CPU clock speed in the 70s35MHz: fastest CPU clock speed in the 80s500-1000MHz: fastest CPU clock speed in the 90s)\n\n\nGHz\nBillion times per second\n1000000000 Hz\n2-5GHz: Almost all consumer CPUs in 2024 have base clock speeds in this range9.117 GHz: fastest CPU clock speed ever recorded (2024)\n\n\n\n\n\n\n\nCPU Cores\nA multi-core SPU means that more than one CPU core is integrated into a single chip, each capable of running parallel processes. This means, in theory, that we multiply the amount of information that can be processes, send and recieved from/to the RAM.\nBenefits of Multi-core processors: - Enhancing the multitasking: multiple jobs done at the same time. - Improved performance: Faster and smoother performance. - Energy efficiency: More work can be done with less power.\n\nCPU Threads\nCPU cores and threads are closely related but not the same. A core is a physical unit within the CPU that executes instructions, while a thread is a virtual sequence of instructions assigned to a core. Think of cores as workers and threads as the jobs they carry out.\n&gt; When CPU has 16 threads, it simply means it can run 16 threads simultaneously.\n\n\n\nBus width\nThe amount of data processed at a time depends on the “number of lightbulbs” or the width of the data bus\nBus width is measured in bits, e.g. 8-bits, 16-bit, 32-bit, 64-bit, etc.\n\n\n\n\n\n\nNoteQuestion\n\n\n\nHow many bits do you need in bus width to represent the Guy in the Box and their codebook from the previous problems?\n\n\n\nIn actual computers, the CPU receives instructions ,addresses memory , and data on separate buses.\nThis allows the CPU to send AND receive the following information at the same time:\n\nControl Bus: What command to perform\nAddress Bus: Where in memory the result should be stored\nData Bus: What data to use to perform the command\n\n —\n\n\n\n\n\n\nNote\n\n\n\nThe CPU is constantly talking to the RAM and the hardware components. At every clock interval, new instructions are sent through the control bus. Here are a few common instructions:\n\n\n\n\n\n\n\nInstruction\nDescription\n\n\n\n\nLOAD\nLoad this value from RAM\n\n\nADD\nAdd these two numbers\n\n\nSTORE\nSave this value to RAM\n\n\nCOMPARE\nCompare these two numbers\n\n\nJUMP IF\nIf a condition is true, jump to this next set of instructions (example : if statement)\n\n\nJUMP\nJump to this next set of instructions (without any conditions - example function call)\n\n\nIN\nRead data from the input device (example keyboard)\n\n\nOUT\nSend data to an output device (example printer)\n\n\n\nAll this information, the instruction, the location of the hardware devices are all in binary (machine code)! When you write a program in C#, Java, Python, etc. You are programming in high level programming language that will be compiled into machine code by the compiler of this language (or interpreted by the interpreter of this language).\n\n\n\nIllustration of CPU wiring to the RAM. Image source: Figure from In One Lesson on Youtube (excellent video explaination on CPUs)\n\n\n\n\n\n\n\nHighway analogy: clock Speed vs bus width\n\nYou can double check that you understand a scientific concept by checking what units of measurement that concept is measured by:\nHighway\n\nNumber of lanes: (a number)\nSpeed limit: (unit distance per time elapsed, e.g. km/h)\n\nSystem bus\n\nBus width:  (a number of bits, eg a 32-bit processor)\nBus speed:  (unit information per time elapsed, e.g. bits/second)\n\n\n\n\n\nAnalogy of the highway. Image source: unknown.",
    "crumbs": [
      "Home",
      "Course Notes",
      "Hardware",
      "Understanding CPUs"
    ]
  },
  {
    "objectID": "topics/technical-support/index.html",
    "href": "topics/technical-support/index.html",
    "title": "Technical Support",
    "section": "",
    "text": "No matching items\n Back to topReuseCC BY-NC-SA 4.0"
  },
  {
    "objectID": "practice/all-exos.html",
    "href": "practice/all-exos.html",
    "title": "Practice Problems",
    "section": "",
    "text": "Order By\n      Default\n      \n        Title\n      \n    \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nBinary conversions\n\n\n\n\n\n\n\n\n\n\n\n\nBinary math\n\n\n\n\n\nNo matching items\n Back to topReuseCC BY-NC-SA 4.0"
  },
  {
    "objectID": "practice/binary-conversions.html",
    "href": "practice/binary-conversions.html",
    "title": "Binary conversions",
    "section": "",
    "text": "Question 1\nConvert the following binary numbers to decimal:\n\n1001\n1101101\n1000001\n1111111\n100000011000001\n101010101010101\n110101\n10101100\n11111010001\n\nCheck your answers (you can google search “1001 binary to decimal” or similar to get an answer)\n\n\n\n\n\n\nTipSolution\n\n\n\n\n\n\n\n\n\n\n\n\n\nBinary\nCalculation\nDecimal\n\n\n\n\n1001\n2³ + 2⁰\n9\n\n\n1101101\n2⁶ + 2⁵ + 2³ + 2² + 2⁰\n109\n\n\n1000001\n2⁶ + 2⁰\n65\n\n\n1111111\n2⁶ + 2⁵ + 2⁴ + 2³ + 2² + 2¹ + 2⁰\n127\n\n\n100000011000001\n2¹⁴ + 2⁷ + 2⁶ + 2⁰\n16577\n\n\n101010101010101\n2¹⁴ + 2¹² + 2¹⁰ + 2⁸ + 2⁶ + 2⁴ + 2² + 2⁰\n21845\n\n\n110101\n2⁵ + 2⁴ + 2² + 2⁰\n53\n\n\n10101100\n2⁷ + 2⁵ + 2³ + 2²\n172\n\n\n11111010001\n2¹⁰ + 2⁹ + 2⁸ + 2⁷ + 2⁶ + 2⁴ + 2⁰\n2001\n\n\n\n\n\n\n\n\nQuestion 2\nConvert the following decimal numbers in binary: - 33 - 58 - 263 - 3450 - 9349 - 724\n\n\n\n\n\n\nTipSolution\n\n\n\n\n\n\n\n\n\n\n\n\n\nDecimal\nCalculation (Powers of 2)\nBinary\n\n\n\n\n33\n32 + 1 = 2⁵ + 2⁰\n100001\n\n\n58\n32 + 16 + 8 + 2 = 2⁵ + 2⁴ + 2³ + 2¹\n111010\n\n\n263\n256 + 4 + 2 + 1 = 2⁸ + 2² + 2¹ + 2⁰\n100000111\n\n\n3450\n2048 + 1024 + 256 + 64 + 32 + 16 + 8 + 2 = 2¹¹+2¹⁰+2⁸+2⁶+2⁵+2⁴+2³+2¹\n110101111010\n\n\n9349\n8192 + 1024 + 128 + 4 + 1 = 2¹³ + 2¹⁰ + 2⁷ + 2² + 2⁰\n1001001000101\n\n\n724\n512 + 128 + 64 + 16 + 4 = 2⁹ + 2⁷ + 2⁶ + 2⁴ + 2²\n1011010100\n\n\n\n\n\n\n\n\n\n\n\n\nTipAlternative method:\n\n\n\n\n\n(263)10 = …\n\n\n\nQuotient\nRemainder\n\n\n\n\n131\n1\n\n\n65\n1\n\n\n32\n1\n\n\n16\n0\n\n\n8\n0\n\n\n4\n0\n\n\n2\n0\n\n\n1\n0\n\n\n0\n1\n\n\n\n(3450)10 = …\n\n\n\nQuotient\nRemainder\n\n\n\n\n1725\n0\n\n\n862\n1\n\n\n431\n0\n\n\n215\n1\n\n\n107\n1\n\n\n53\n1\n\n\n26\n1\n\n\n13\n0\n\n\n6\n1\n\n\n3\n0\n\n\n1\n1\n\n\n0\n1\n\n\n\nReading from bottom to top: 1101 0111 1010\n(9349)10 = …\n\n\n\nQuotient\nRemainder\n\n\n\n\n4674\n1\n\n\n2337\n0\n\n\n1168\n1\n\n\n584\n0\n\n\n292\n0\n\n\n146\n0\n\n\n73\n0\n\n\n36\n1\n\n\n18\n0\n\n\n9\n0\n\n\n4\n1\n\n\n2\n0\n\n\n1\n0\n\n\n0\n1\n\n\n\nReading from bottom to top: 10 0100 1000 0101\n\n\n\n\n\nQuestion 3\nConsider a 32-bit CPU: a. How many numbers can be represented on this CPU? b. What’s the largest unsigned number (positive numbers only)? c. What’s the largest signed number?\n\n\n\n\n\n\nTipSolution\n\n\n\n\n\n\n4,294,967,296 (232)\n4,294,967,295\n2,147,483,648 (231) Note that for signed numbers, one bit is reserved for the sign (+/-).\n\n\n\n\n\n\nQuestion 4\nWhat’s the smallest number which requires 12 bits?\n\n\n\n\n\n\nTipSolution\n\n\n\n\n\n212 = 4096 Note: Any number smaller than 4096, doesn’t require 12 bits to be represented in binary. 4096 is the smallest number which requires 12 bits.\n\n\n\n\n\nQuestion 5\nWhat’s the minimum numbers of bits required to store the value 16587.\n\n\n\n\n\n\nTipSolution\n\n\n\n\n\n\nRepresent the number in binary: 100 0000 1100 1011\nCount the number of bits required to represent this number.\n\nThe answer is 15 bits.\n\n\n\n\n\n\n\n Back to topReuseCC BY-NC-SA 4.0"
  },
  {
    "objectID": "about/syllabus.html",
    "href": "about/syllabus.html",
    "title": "Syllabus",
    "section": "",
    "text": "Figure caption."
  },
  {
    "objectID": "about/syllabus.html#teacher---section-1",
    "href": "about/syllabus.html#teacher---section-1",
    "title": "Syllabus",
    "section": "Teacher - Section 1",
    "text": "Teacher - Section 1\n\nName: Youmna Badawy\nOffice: Penfield 311\nOffice hours: Posted on Léa and on office door\nCommunication: Mio (for quck response) or Teams (for online office hours)\nWork submission: Omnivox\nBooking link: Coming soon"
  },
  {
    "objectID": "about/syllabus.html#teacher---section-2",
    "href": "about/syllabus.html#teacher---section-2",
    "title": "Syllabus",
    "section": "Teacher - Section 2",
    "text": "Teacher - Section 2\n\nName: Preeti Pearl D’Mello\nOffice: Penfield 311\nOffice hours: Posted on Léa and on office door\nCommunication: Mio, Teams, or email\nWork submission: Omnivox\nBooking link: Link\n\n\nAssessments\n\n60% Assignments and Labs\n20% Test 1\n20% Test 2"
  },
  {
    "objectID": "about/syllabus.html#course-overview",
    "href": "about/syllabus.html#course-overview",
    "title": "Syllabus",
    "section": "Course overview",
    "text": "Course overview\nFrom the course outline:\n\nIn this course students learn to install hardware and software and provide technical support and training to users. Topics include installing, configuring, and uninstalling hardware devices and device drivers, installing and uninstalling system and application software, backing up and restoring software, hard disk partitioning and formatting, help desk, user training.\n\n\nWhat topics does this course cover?\n\nComputer Hardware – what computers are made of\nComputer logic – how do we make computers behave predictably and controllably?\nComputer Software – what kind of programs can we make computers run?\nHelpdesk and Troubleshooting computers – as a hobby and a profession\nOperating systems – the most important software for a computer to run\nIntro to Servers and Networking – how computers communicate with eachother\n\nEach topic above is a massive field of research and industry in its own right – you could get a PhD in each! We will be introduced to each briefly, and at a high level (overview) to come away with a better technical understanding than we had before."
  },
  {
    "objectID": "about/syllabus.html#what-is-this-course-preparing-you-for",
    "href": "about/syllabus.html#what-is-this-course-preparing-you-for",
    "title": "Syllabus",
    "section": "What is this course preparing you for?",
    "text": "What is this course preparing you for?"
  },
  {
    "objectID": "about/syllabus.html#what-will-i-learn",
    "href": "about/syllabus.html#what-will-i-learn",
    "title": "Syllabus",
    "section": "What will I learn?",
    "text": "What will I learn?\n\nTaking apart a computer and putting it back together\nInstalling the operating system\nSetting up a virtual machine\nUnderstand how computers process and store information\nUnderstand the role of IT Helpdesk Technicians\nLearn to troubleshoot hardware and software issues."
  },
  {
    "objectID": "about/syllabus.html#material-to-acquire",
    "href": "about/syllabus.html#material-to-acquire",
    "title": "Syllabus",
    "section": "Material to acquire",
    "text": "Material to acquire\n\nUSB Stick 16Gb (at least)\n\nFor installing Operating systems\nCarrying useful software around\n\nMultiheaded Screwdriver x 1:\n\nFor assembling computers!\nExample: Picquic-88001-Multi-Bit-Screwdriver-Full-Size\n\n(OPTIONAL) Anti-static ESD bracelet band:\n\nFor your safety when playing with electronics\nExample: Antistatic-Wrist-Strap"
  },
  {
    "objectID": "about/syllabus.html#rules-and-tips-to-succeed-in-this-course",
    "href": "about/syllabus.html#rules-and-tips-to-succeed-in-this-course",
    "title": "Syllabus",
    "section": "Rules and tips to succeed in this course",
    "text": "Rules and tips to succeed in this course\n\n1: Attend all classes and labs!\n\nI take attendance every class and require you to submit in-class activities and group work during class time.\nThis course contains a lot of hands-on learning.\nYou CANNOT rely solely on the course notes to succeed.\n\n\n\n2: Keep a professional behaviour in the lab.\n\nArrive to the labs 5 minutes in advance!\nBe careful when handling computer parts, they can easily break.\nAvoid eating or drinking near computers to prevent spills and damage.\nLet’s work together to keep our tech tools in top shape.\nKeep voices low during lab/group activities to avoid distracting others who are working or receiving help.\n\n\n\n\n3: Don’t play video games in class!\n\nNo video games, or online videos should be played in class.\nIf you are done the in-class activities or are waiting after me, you may either leave or work on homework.\n\n\n\n\n4: Share with others!\n\nTry your best to get to know other students\n\nHelp each other out! You will learn much more from working through the assignments yourself and from teaching eachother.\nLearning from others and building relationships with new peers is one of the most valuable parts of school\n\nIf you feel more advanced or have already done what’s shown in class, don’t hesitate to help others and share your knowledge with the class.\nSeek out help if you are struggling (from me, from peers, from John Abbott student services, etc.)\n\n\n\n\n5: Be curious!\nThis field has a lot of support online. Stay curious, the internet is your Oyster!"
  },
  {
    "objectID": "about/syllabus.html#feedback",
    "href": "about/syllabus.html#feedback",
    "title": "Syllabus",
    "section": "Feedback",
    "text": "Feedback\nLet me know how things are going in the course:\n\nAm I covering the material too slowly or too quickly?\nAre the slides material clear?\nCan you read my handwriting?\nCan you hear me well?\nDoes my answer make sense?\nDo you understand the assignment questions?\nEtc."
  },
  {
    "objectID": "about/this-site.html",
    "href": "about/this-site.html",
    "title": "About this website",
    "section": "",
    "text": "This webpage is written in Markdown using the Quarto framework. The website is hosted via GitHub Pages\nSource code is open source and available on GitHub."
  },
  {
    "objectID": "about/this-site.html#source-code",
    "href": "about/this-site.html#source-code",
    "title": "About this website",
    "section": "",
    "text": "This webpage is written in Markdown using the Quarto framework. The website is hosted via GitHub Pages\nSource code is open source and available on GitHub."
  },
  {
    "objectID": "about/this-site.html#course-content",
    "href": "about/this-site.html#course-content",
    "title": "About this website",
    "section": "Course content",
    "text": "Course content\nCourse content, both for lectures and assignments, has been adapted by me from a variety of sources. This section serves the purpose of both acknowledging these references as well as pointing the way for curious students to begin investigating further into course material than we had time to cover.\n\nCopyright\nAll course content was either written by Michael Haaf, or explicitly adapted from external resources with attributions made clear. This course content retains the licenses of the original works where relevant, and is otherwise licensed under the Creative Commons Attribution 4.0 International License.\n\nTerms of use\nYou are free to:\n\nShare: copy and redistribute the material in any medium or format\nAdapt: remix, transform, and build upon the material for any purpose, even commercially.\n\nUnder the following terms:\n\nAttribution: You must give appropriate credit, provide a link to the license, and indicate if changes were made. You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use.\n\nCreative Commons Attribution 4.0 International License"
  },
  {
    "objectID": "about/this-site.html#course-website",
    "href": "about/this-site.html#course-website",
    "title": "About this website",
    "section": "Course website",
    "text": "Course website\nDetails about how this website was built follow.\n\nColophon\n\n\n\nFrom Wikipedia: In publishing, a colophon is a brief statement containing information about the publication of a book… Some web pages also have colophons, which frequently contain (X)HTML, CSS, or usability standards compliance information and links to website validation tests.\n\n\n\nMarkup: Markdown\nFramework: Quarto\nDeployment: GitHub Pages\n\nYou can follow along directly with course updates at the [course repository][course-repository]\n\n\nCopyright\nThis website was written and designed by the Michael Haaf. All code and assets related to this website, unless indicated otherwise, are licensed under the GNU General Public License v3.0\n\nTerms of use\nThis website’s code is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\nThis website’s code is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\nGNU General Public License Notice"
  }
]